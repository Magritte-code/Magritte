<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structLambda" kind="struct" language="C++" prot="public">
    <compoundname>Lambda</compoundname>
    <includes refid="lambda_8hpp" local="no">lambda.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structLambda_1a7891f79e8b5bc33c07937eaf9fdc93b8" prot="public" static="no" mutable="no">
        <type><ref refid="structParameters" kindref="compound">Parameters</ref></type>
        <definition>Parameters Lambda::parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="9" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLambda_1a1d5d0d8955bcb5a3dff75549d4462dcf" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a2fbf53fed9e8fa669cc443ac55a8c48f" kindref="member">Real3</ref></type>
        <definition>Real3 Lambda::Ls</definition>
        <argsstring></argsstring>
        <name>Ls</name>
        <briefdescription>
<para>values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="11" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLambda_1a4c82ad3e283e9083d4bfa41ad42f080c" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a5774ff2894388787e3d3bbf2f2fe376a" kindref="member">Size3</ref></type>
        <definition>Size3 Lambda::nr</definition>
        <argsstring></argsstring>
        <name>nr</name>
        <briefdescription>
<para>position indices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="12" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLambda_1af7860c0e1267310f772891dd8621daaa" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a0015d4067a970e313605c333d49ed5c5" kindref="member">Real1</ref></type>
        <definition>Real1 Lambda::Lss</definition>
        <argsstring></argsstring>
        <name>Lss</name>
        <briefdescription>
<para>linearized values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="14" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLambda_1ac5e44dfa3a6d810b63cb0ef2cf85ef83" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref></type>
        <definition>Size1 Lambda::nrs</definition>
        <argsstring></argsstring>
        <name>nrs</name>
        <briefdescription>
<para>linearized position indices </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="15" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLambda_1a4a75fdfc7b5c3ce43e57f5da581d0eba" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref></type>
        <definition>Size1 Lambda::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="17" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLambda_1a7ad91d1705854ac18101758bb256c74d" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lambda::nrad</definition>
        <argsstring></argsstring>
        <name>nrad</name>
        <briefdescription>
<para>number of (radiative) transitions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="19" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structLambda_1a0954d8427dea7e6e33f350ca9d062d77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lambda::initialize</definition>
        <argsstring>(const Size nrad_new)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>nrad_new</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1a2f135287d5508cd818c7bf92b46e1521" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lambda::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1a4955270c42ca6cd7452bb04d05975318" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lambda::linearize_data</definition>
        <argsstring>()</argsstring>
        <name>linearize_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1a6a72b688e5d4b6f4f71410b0d624f129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lambda::MPI_gather</definition>
        <argsstring>()</argsstring>
        <name>MPI_gather</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1abc220358d3b8a12f2efd7f32967dbfeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lambda::index_first</definition>
        <argsstring>(const Size p, const Size k) const</argsstring>
        <name>index_first</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1a701df59bbef8aa0e325ba4d6d281a74a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lambda::index_last</definition>
        <argsstring>(const Size p, const Size k) const</argsstring>
        <name>index_last</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1a12cab182ee47646083942660eb7d9613" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref></type>
        <definition>Real Lambda::get_Ls</definition>
        <argsstring>(const Size p, const Size k, const Size index) const</argsstring>
        <name>get_Ls</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1ad52a3518b08c3884a498b1a4692b060a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lambda::get_nr</definition>
        <argsstring>(const Size p, const Size k, const Size index) const</argsstring>
        <name>get_nr</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1aee80c0fb96bf582a00f8982396d40c1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lambda::get_size</definition>
        <argsstring>(const Size p, const Size k) const</argsstring>
        <name>get_size</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLambda_1a2c63749263c50328de872dbe3b676521" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lambda::add_element</definition>
        <argsstring>(const Size p, const Size k, const Size nr, const Real Ls)</argsstring>
        <name>add_element</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>nr</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref></type>
          <declname>Ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="34" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="53">
        <label>Lambda</label>
        <link refid="structLambda"/>
        <childnode refid="54" relation="usage">
          <edgelabel>size</edgelabel>
          <edgelabel>nrs</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>Lss</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>nr</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>Ls</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>Parameters</label>
        <link refid="structParameters"/>
      </node>
      <node id="55">
        <label>vector&lt; Real &gt;</label>
      </node>
      <node id="58">
        <label>vector&lt; Real2 &gt;</label>
      </node>
      <node id="54">
        <label>vector&lt; Size &gt;</label>
      </node>
      <node id="57">
        <label>vector&lt; Size2 &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" line="8" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lambda/lambda.hpp" bodystart="7" bodyend="35"/>
    <listofallmembers>
      <member refid="structLambda_1a2c63749263c50328de872dbe3b676521" prot="public" virt="non-virtual"><scope>Lambda</scope><name>add_element</name></member>
      <member refid="structLambda_1a2f135287d5508cd818c7bf92b46e1521" prot="public" virt="non-virtual"><scope>Lambda</scope><name>clear</name></member>
      <member refid="structLambda_1a12cab182ee47646083942660eb7d9613" prot="public" virt="non-virtual"><scope>Lambda</scope><name>get_Ls</name></member>
      <member refid="structLambda_1ad52a3518b08c3884a498b1a4692b060a" prot="public" virt="non-virtual"><scope>Lambda</scope><name>get_nr</name></member>
      <member refid="structLambda_1aee80c0fb96bf582a00f8982396d40c1b" prot="public" virt="non-virtual"><scope>Lambda</scope><name>get_size</name></member>
      <member refid="structLambda_1abc220358d3b8a12f2efd7f32967dbfeb" prot="public" virt="non-virtual"><scope>Lambda</scope><name>index_first</name></member>
      <member refid="structLambda_1a701df59bbef8aa0e325ba4d6d281a74a" prot="public" virt="non-virtual"><scope>Lambda</scope><name>index_last</name></member>
      <member refid="structLambda_1a0954d8427dea7e6e33f350ca9d062d77" prot="public" virt="non-virtual"><scope>Lambda</scope><name>initialize</name></member>
      <member refid="structLambda_1a4955270c42ca6cd7452bb04d05975318" prot="public" virt="non-virtual"><scope>Lambda</scope><name>linearize_data</name></member>
      <member refid="structLambda_1a1d5d0d8955bcb5a3dff75549d4462dcf" prot="public" virt="non-virtual"><scope>Lambda</scope><name>Ls</name></member>
      <member refid="structLambda_1af7860c0e1267310f772891dd8621daaa" prot="public" virt="non-virtual"><scope>Lambda</scope><name>Lss</name></member>
      <member refid="structLambda_1a6a72b688e5d4b6f4f71410b0d624f129" prot="public" virt="non-virtual"><scope>Lambda</scope><name>MPI_gather</name></member>
      <member refid="structLambda_1a4c82ad3e283e9083d4bfa41ad42f080c" prot="public" virt="non-virtual"><scope>Lambda</scope><name>nr</name></member>
      <member refid="structLambda_1a7ad91d1705854ac18101758bb256c74d" prot="public" virt="non-virtual"><scope>Lambda</scope><name>nrad</name></member>
      <member refid="structLambda_1ac5e44dfa3a6d810b63cb0ef2cf85ef83" prot="public" virt="non-virtual"><scope>Lambda</scope><name>nrs</name></member>
      <member refid="structLambda_1a7891f79e8b5bc33c07937eaf9fdc93b8" prot="public" virt="non-virtual"><scope>Lambda</scope><name>parameters</name></member>
      <member refid="structLambda_1a4a75fdfc7b5c3ce43e57f5da581d0eba" prot="public" virt="non-virtual"><scope>Lambda</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
