<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structIoPython" kind="struct" language="C++" prot="public">
    <compoundname>IoPython</compoundname>
    <basecompoundref refid="structIo" prot="public" virt="non-virtual">Io</basecompoundref>
    <includes refid="io__python_8hpp" local="no">io_python.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structIoPython_1ad0a9ece7b694753a335fe99792741cba" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string IoPython::implementation</definition>
        <argsstring></argsstring>
        <name>implementation</name>
        <briefdescription>
<para>name of python module with io implementation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="14" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structIoPython_1a254f67d2018442dcd966133914d74502" prot="private" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string IoPython::io_folder</definition>
        <argsstring></argsstring>
        <name>io_folder</name>
        <initializer>= string (<ref refid="configure_8hpp_1a6e1f3bb07d1b7c326435235ead08119c" kindref="member">MAGRITTE_FOLDER</ref>) + &quot;/src/io/python/&quot;</initializer>
        <briefdescription>
<para>path to io_python files </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="76" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structIoPython_1a943ed545e872a9c89088ab983c1dca71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IoPython::IoPython</definition>
        <argsstring>(const string &amp;implementation, const string &amp;io_file)</argsstring>
        <name>IoPython</name>
        <param>
          <type>const string &amp;</type>
          <declname>implementation</declname>
          <defname>imp</defname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>io_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="structIoPython" kindref="compound">IoPython</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">implementaion</parametername>
</parameternamelist>
<parameterdescription>
<para>: name of python module with io implementation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">io_file</parametername>
</parameternamelist>
<parameterdescription>
<para>: file to read from and write to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="17" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1aedd2bc3583f41797ff1f5a7ee55600bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_length</definition>
        <argsstring>(const string fname, Size &amp;length) const override</argsstring>
        <name>read_length</name>
        <reimplements refid="structIo_1a9a229cebb88cd69dfb1af1926cde42a7">read_length</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref> &amp;</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for the length of a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">length</parametername>
</parameternamelist>
<parameterdescription>
<para>: length to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="19" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ad789637a8b189ff15babec3f7dc36544" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size IoPython::get_length</definition>
        <argsstring>(const string fname) const override</argsstring>
        <name>get_length</name>
        <reimplements refid="structIo_1afb72811abb76f805a35df321ffbf07dc">get_length</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter for the length of a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of the file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="20" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a26ea6e09193882f124db27410f06efa1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_width</definition>
        <argsstring>(const string fname, Size &amp;width) const override</argsstring>
        <name>read_width</name>
        <reimplements refid="structIo_1af08f454b36b2cbcdd5595dd32df70dee">read_width</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref> &amp;</type>
          <declname>width</declname>
          <defname>length</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for the number of columns (width) of a file or the number of files with a similar file name <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">width</parametername>
</parameternamelist>
<parameterdescription>
<para>: width to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="22" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a96edb6427ce830a96a83636218153461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size IoPython::get_width</definition>
        <argsstring>(const string fname) const override</argsstring>
        <name>get_width</name>
        <reimplements refid="structIo_1aec7ed9748cc7e17797874e5fd316ce67">get_width</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Getter for the number of columns (width) of a file or the number of files with a similar file name <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>width of the file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="23" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a0688116ab7bc6cb2b08f1123fa6e0978" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_number</definition>
        <argsstring>(const string fname, long &amp;number) const override</argsstring>
        <name>read_number</name>
        <reimplements refid="structIo_1aaf24fb114744f57fb2339496f943ce93">read_number</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a single (long integer) number from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file containing the number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number</parametername>
</parameternamelist>
<parameterdescription>
<para>: number to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="25" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a6ac908e9b7fc3ab629effc67f3e3197c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_number</definition>
        <argsstring>(const string fname, const long &amp;number) const override</argsstring>
        <name>write_number</name>
        <reimplements refid="structIo_1a163d88ee778a65ecafd62bcb35d9fc33">write_number</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a single (long integer) number to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number</parametername>
</parameternamelist>
<parameterdescription>
<para>: number to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="26" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a86ee4ead6530d2c5ba4c559b749029fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_number</definition>
        <argsstring>(const string fname, Size &amp;number) const override</argsstring>
        <name>read_number</name>
        <reimplements refid="structIo_1ac66643da6937851857e3b6e8775308b9">read_number</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref> &amp;</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a single (long integer) number from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file containing the number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number</parametername>
</parameternamelist>
<parameterdescription>
<para>: number to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="28" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1aefebea20e857e120f68d446ebd7b0234" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_number</definition>
        <argsstring>(const string fname, const Size &amp;number) const override</argsstring>
        <name>write_number</name>
        <reimplements refid="structIo_1a33448644c24fa0bcac95a8d95bcd0ea2">write_number</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref> &amp;</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a single (long integer) number to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number</parametername>
</parameternamelist>
<parameterdescription>
<para>: number to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="29" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a58f958b3278d1a277d36a9bc057dafb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_number</definition>
        <argsstring>(const string fname, Real &amp;number) const override</argsstring>
        <name>read_number</name>
        <reimplements refid="structIo_1adbbb34e34471166fb90824b8b4a21255">read_number</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &amp;</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a single (double) number from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file containing the number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number</parametername>
</parameternamelist>
<parameterdescription>
<para>: number to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="31" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a80d1758f204c4e297aba633434f1fc90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_number</definition>
        <argsstring>(const string fname, const Real &amp;number) const override</argsstring>
        <name>write_number</name>
        <reimplements refid="structIo_1a6a12702ab6b4ec2c040c35bd6e5a5092">write_number</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &amp;</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a single (double) number to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">number</parametername>
</parameternamelist>
<parameterdescription>
<para>: number to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="32" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a4749ae74c96e3bd90da8399f850c0fd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_word</definition>
        <argsstring>(const string fname, string &amp;word) const override</argsstring>
        <name>read_word</name>
        <reimplements refid="structIo_1ad5a50f54b41f5076b0b4fcc03ac0f270">read_word</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a single string from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file containing the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">word</parametername>
</parameternamelist>
<parameterdescription>
<para>: string to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="34" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1aa2a26eec4c01566bc6a91ed09b3bdd57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_word</definition>
        <argsstring>(const string fname, const string &amp;word) const override</argsstring>
        <name>write_word</name>
        <reimplements refid="structIo_1a60ce58b270dd4beeb0263bfdd2c63daf">write_word</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a single string to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">word</parametername>
</parameternamelist>
<parameterdescription>
<para>: string to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="35" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a89c446e038d89c06993195a6e050deaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_bool</definition>
        <argsstring>(const string fname, bool &amp;value) const override</argsstring>
        <name>read_bool</name>
        <reimplements refid="structIo_1a61713ddf36c2c5611d41bfc7220ff89d">read_bool</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a single boolean from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file containing the boolean </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>: value to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="37" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="152" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a3acf06887d9d5caaefe1d498f6acc307" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_bool</definition>
        <argsstring>(const string fname, const bool &amp;value) const override</argsstring>
        <name>write_bool</name>
        <reimplements refid="structIo_1abd14c6db5f8b484a298f08992ed9f511">write_bool</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a single boolean to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to the file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>: value to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="38" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="171" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1aa7f8e49e65717c025bd2b00e865ef72b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_list</definition>
        <argsstring>(const string fname, Long1 &amp;list) const override</argsstring>
        <name>read_list</name>
        <reimplements refid="structIo_1ad8db00e516c6686e4844c7ad6bfbd28e">read_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1af43daf57fb95b58543a5ad410d062d21" kindref="member">Long1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a list of long integers from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="40" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ae11a5344779b2f014adfc4494b5aa102" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_list</definition>
        <argsstring>(const string fname, const Long1 &amp;list) const override</argsstring>
        <name>write_list</name>
        <reimplements refid="structIo_1a88b9ed3d29a39626f53c5204757603d3">write_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1af43daf57fb95b58543a5ad410d062d21" kindref="member">Long1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a list of long integers to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="41" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="196" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1add2e1ed3a5510f49095d2f2da1430fc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_list</definition>
        <argsstring>(const string fname, Double1 &amp;list) const override</argsstring>
        <name>read_list</name>
        <reimplements refid="structIo_1aa1d905d1469000f40bfa03dfeca0de73">read_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a list of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="43" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a99dcf2302ae757901cbb41de02e5f744" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_list</definition>
        <argsstring>(const string fname, const Double1 &amp;list) const override</argsstring>
        <name>write_list</name>
        <reimplements refid="structIo_1ab0789472bdbe4f0b18e8497fe5773c45">write_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a list of doubles to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="44" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="223" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1aa633e9071b99cbddd9279b7290d7c6ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_list</definition>
        <argsstring>(const string fname, Size_t1 &amp;list) const override</argsstring>
        <name>read_list</name>
        <reimplements refid="structIo_1a479f9d2e852e5f6cd404ae6787c59e33">read_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a0ddf613068770023126a95171cdaa0df" kindref="member">Size_t1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a list of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="46" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a5edcf340a035fb5cc9e1a1b05c59d97c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_list</definition>
        <argsstring>(const string fname, const Size_t1 &amp;list) const override</argsstring>
        <name>write_list</name>
        <reimplements refid="structIo_1a4d6bfdddbefb3b2c9e20debd76f97c1a">write_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a0ddf613068770023126a95171cdaa0df" kindref="member">Size_t1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a list of doubles to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="47" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="250" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ad1abbbcaa88457aa998d5b86687dabd6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_list</definition>
        <argsstring>(const string fname, Real1 &amp;list) const override</argsstring>
        <name>read_list</name>
        <reimplements refid="structIo_1aeaa39e684671e1caca48d0c5c6c2e0bb">read_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a0015d4067a970e313605c333d49ed5c5" kindref="member">Real1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a list of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="49" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ad4a36f6d20ae6060853ff22a4ce4bb04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_list</definition>
        <argsstring>(const string fname, const Real1 &amp;list) const override</argsstring>
        <name>write_list</name>
        <reimplements refid="structIo_1af1351cbf15d4f9b9f1e3e9b9d3bd99e3">write_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a0015d4067a970e313605c333d49ed5c5" kindref="member">Real1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a list of doubles to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="50" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="304" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1aa33540fad4875056e7d8bf3e5bcf4775" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_list</definition>
        <argsstring>(const string fname, Size1 &amp;list) const override</argsstring>
        <name>read_list</name>
        <reimplements refid="structIo_1a26eb4d80a6d76b8f14d17fff9538d60e">read_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a list of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="52" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a8a8989fc1970945310e8ba43ac5e1d6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_list</definition>
        <argsstring>(const string fname, const Size1 &amp;list) const override</argsstring>
        <name>write_list</name>
        <reimplements refid="structIo_1ab736c288a79f815285aa5dda5e60298e">write_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a list of doubles to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="53" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="277" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a4eed43e66926001aec376410e0b5e14e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_list</definition>
        <argsstring>(const string fname, String1 &amp;list) const override</argsstring>
        <name>read_list</name>
        <reimplements refid="structIo_1a292ce8e28c5c835354be4a5870aef70a">read_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a6d7f9a4d0e85b9f1c3145ff9f65ab54d" kindref="member">String1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a list of strings from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the list </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="55" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="321" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a95f8ae3a328a807d95361245bbbb30ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_list</definition>
        <argsstring>(const string fname, const String1 &amp;list) const override</argsstring>
        <name>write_list</name>
        <reimplements refid="structIo_1a9a0f1f37f414d4f8480878aef4a7a859">write_list</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a6d7f9a4d0e85b9f1c3145ff9f65ab54d" kindref="member">String1</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a list of strings to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">list</parametername>
</parameternamelist>
<parameterdescription>
<para>: list to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="56" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="331" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ab7a25b06f21e8523e3591154849e4ae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_array</definition>
        <argsstring>(const string fname, Long2 &amp;array) const override</argsstring>
        <name>read_array</name>
        <reimplements refid="structIo_1af6cacc007e010a226459b37ba976aa18">read_array</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1afb2873616918a9a0b14e81276ab28811" kindref="member">Long2</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for an array of long integers from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>: array to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="58" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a4b828cfe6461c865f44f563b952b26b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_array</definition>
        <argsstring>(const string fname, const Long2 &amp;array) const override</argsstring>
        <name>write_array</name>
        <reimplements refid="structIo_1aa73fe79d27fbaf31cbea124769e13a2e">write_array</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1afb2873616918a9a0b14e81276ab28811" kindref="member">Long2</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for an array of long integers to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>: array to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="59" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="358" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ab162c02e2f3da47b91d619f80a8c5ffa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_array</definition>
        <argsstring>(const string fname, Double2 &amp;array) const override</argsstring>
        <name>read_array</name>
        <reimplements refid="structIo_1a4b1c5f54037a18b97c47c2fc35bbfb1d">read_array</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for an array of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>: array to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="61" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ac595084b6cd0176e28fc99d37c43243c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_array</definition>
        <argsstring>(const string fname, const Double2 &amp;array) const override</argsstring>
        <name>write_array</name>
        <reimplements refid="structIo_1af2f52ba6b21d23af0b3bed255e815c5b">write_array</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for an array of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>: array to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="62" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="385" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a5ac9965d6b61942e549013e8e085d0ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_array</definition>
        <argsstring>(const string fname, Real2 &amp;array) const override</argsstring>
        <name>read_array</name>
        <reimplements refid="structIo_1a877b3301aed9d7de2a6eff40a640b7d8">read_array</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a71d8c3c9e08e8b53f75ecf2db5edafc5" kindref="member">Real2</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for an array of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>: array to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="64" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="402" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ade42cf0b6ea3011dd2c7ec8d63c8c229" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_array</definition>
        <argsstring>(const string fname, const Real2 &amp;array) const override</argsstring>
        <name>write_array</name>
        <reimplements refid="structIo_1a78655c3496d91fbfb5bf049873cbcf03">write_array</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a71d8c3c9e08e8b53f75ecf2db5edafc5" kindref="member">Real2</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for an array of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">array</parametername>
</parameternamelist>
<parameterdescription>
<para>: array to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="65" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="412" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1ae6a7ef19f852cb570e2c729d9f6c0e6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::read_3_vector</definition>
        <argsstring>(const string fname, Double1 &amp;x, Double1 &amp;y, Double1 &amp;z) const override</argsstring>
        <name>read_3_vector</name>
        <reimplements refid="structIo_1aef5a70d68049574861ebbd40aea9b293">read_3_vector</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for a list of 3-vectors of doubles from a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the vectors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>: x component of the vector to be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>: y component of the vector to be read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">z</parametername>
</parameternamelist>
<parameterdescription>
<para>: z component of the vector to be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="67" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="431" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1af104c933e36a33903198e59f9885bfb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int IoPython::write_3_vector</definition>
        <argsstring>(const string fname, const Double1 &amp;x, const Double1 &amp;y, const Double1 &amp;z) const override</argsstring>
        <name>write_3_vector</name>
        <reimplements refid="structIo_1a175931043244e44f87641ea7c5c7aeff">write_3_vector</reimplements>
        <param>
          <type>const string</type>
          <declname>fname</declname>
          <defname>file_name</defname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref> &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for a list of 3-vectors of doubles to a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: path to file containing the vectors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>: x component of the vector to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>: y component of the vector to be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">z</parametername>
</parameternamelist>
<parameterdescription>
<para>: z component of the vector to be written </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="70" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="468" bodyend="501"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structIoPython_1a0531b1e59ceee34767d5d6025333f5cc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class type</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int IoPython::read_in_python</definition>
        <argsstring>(const string function, const string file_name, type &amp;data) const</argsstring>
        <name>read_in_python</name>
        <param>
          <type>const string</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const string</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executer in python for reader functions <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>: name of reader function to execute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: name of the file from which to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>: data read from the file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="79" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="510" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="structIoPython_1a83551dd6d835cd7376c89f85b7d34b5e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class type</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int IoPython::write_in_python</definition>
        <argsstring>(const string function, const string file_name, const type &amp;data) const</argsstring>
        <name>write_in_python</name>
        <param>
          <type>const string</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const string</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const type &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executer in python for writer functions <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>: name of writer function to execute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: name of the file to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>: data read from the file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="83" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.cpp" bodystart="559" bodyend="581"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structIoText" kindref="compound">IoText</ref>: io specified by text files. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="43">
        <label>Io</label>
        <link refid="structIo"/>
      </node>
      <node id="42">
        <label>IoPython</label>
        <link refid="structIoPython"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="45">
        <label>Io</label>
        <link refid="structIo"/>
        <childnode refid="46" relation="usage">
          <edgelabel>io_file</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>string</label>
      </node>
      <node id="44">
        <label>IoPython</label>
        <link refid="structIoPython"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>implementation</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" line="12" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/io/python/io_python.hpp" bodystart="11" bodyend="85"/>
    <listofallmembers>
      <member refid="structIoPython_1ad789637a8b189ff15babec3f7dc36544" prot="public" virt="virtual"><scope>IoPython</scope><name>get_length</name></member>
      <member refid="structIoPython_1a96edb6427ce830a96a83636218153461" prot="public" virt="virtual"><scope>IoPython</scope><name>get_width</name></member>
      <member refid="structIoPython_1ad0a9ece7b694753a335fe99792741cba" prot="public" virt="non-virtual"><scope>IoPython</scope><name>implementation</name></member>
      <member refid="structIo_1a1f3aa792a9f1071acea2803d3cd6e770" prot="public" virt="non-virtual"><scope>IoPython</scope><name>Io</name></member>
      <member refid="structIo_1ad39461ed5b16c4fa74363a2a593d12e3" prot="public" virt="non-virtual"><scope>IoPython</scope><name>io_file</name></member>
      <member refid="structIoPython_1a254f67d2018442dcd966133914d74502" prot="private" virt="non-virtual"><scope>IoPython</scope><name>io_folder</name></member>
      <member refid="structIoPython_1a943ed545e872a9c89088ab983c1dca71" prot="public" virt="non-virtual"><scope>IoPython</scope><name>IoPython</name></member>
      <member refid="structIoPython_1ae6a7ef19f852cb570e2c729d9f6c0e6c" prot="public" virt="virtual"><scope>IoPython</scope><name>read_3_vector</name></member>
      <member refid="structIoPython_1ab7a25b06f21e8523e3591154849e4ae0" prot="public" virt="virtual"><scope>IoPython</scope><name>read_array</name></member>
      <member refid="structIoPython_1ab162c02e2f3da47b91d619f80a8c5ffa" prot="public" virt="virtual"><scope>IoPython</scope><name>read_array</name></member>
      <member refid="structIoPython_1a5ac9965d6b61942e549013e8e085d0ad" prot="public" virt="virtual"><scope>IoPython</scope><name>read_array</name></member>
      <member refid="structIo_1a10a3daf59bc4a0204f144168d9351bca" prot="public" virt="non-virtual" ambiguityscope="Io::"><scope>IoPython</scope><name>read_array</name></member>
      <member refid="structIoPython_1a89c446e038d89c06993195a6e050deaa" prot="public" virt="virtual"><scope>IoPython</scope><name>read_bool</name></member>
      <member refid="structIoPython_1a0531b1e59ceee34767d5d6025333f5cc" prot="private" virt="non-virtual"><scope>IoPython</scope><name>read_in_python</name></member>
      <member refid="structIoPython_1aedd2bc3583f41797ff1f5a7ee55600bd" prot="public" virt="virtual"><scope>IoPython</scope><name>read_length</name></member>
      <member refid="structIoPython_1aa7f8e49e65717c025bd2b00e865ef72b" prot="public" virt="virtual"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIoPython_1add2e1ed3a5510f49095d2f2da1430fc0" prot="public" virt="virtual"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIoPython_1aa633e9071b99cbddd9279b7290d7c6ec" prot="public" virt="virtual"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIoPython_1ad1abbbcaa88457aa998d5b86687dabd6" prot="public" virt="virtual"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIoPython_1aa33540fad4875056e7d8bf3e5bcf4775" prot="public" virt="virtual"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIoPython_1a4eed43e66926001aec376410e0b5e14e" prot="public" virt="virtual"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIo_1acff6d4c6fe27096ef308dc44c1c9a7ef" prot="public" virt="non-virtual" ambiguityscope="Io::"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIo_1aac27fd596c4d7b2cc15638efb7b04e59" prot="public" virt="non-virtual" ambiguityscope="Io::"><scope>IoPython</scope><name>read_list</name></member>
      <member refid="structIoPython_1a0688116ab7bc6cb2b08f1123fa6e0978" prot="public" virt="virtual"><scope>IoPython</scope><name>read_number</name></member>
      <member refid="structIoPython_1a86ee4ead6530d2c5ba4c559b749029fb" prot="public" virt="virtual"><scope>IoPython</scope><name>read_number</name></member>
      <member refid="structIoPython_1a58f958b3278d1a277d36a9bc057dafb8" prot="public" virt="virtual"><scope>IoPython</scope><name>read_number</name></member>
      <member refid="structIoPython_1a26ea6e09193882f124db27410f06efa1" prot="public" virt="virtual"><scope>IoPython</scope><name>read_width</name></member>
      <member refid="structIoPython_1a4749ae74c96e3bd90da8399f850c0fd4" prot="public" virt="virtual"><scope>IoPython</scope><name>read_word</name></member>
      <member refid="structIoPython_1af104c933e36a33903198e59f9885bfb3" prot="public" virt="virtual"><scope>IoPython</scope><name>write_3_vector</name></member>
      <member refid="structIoPython_1a4b828cfe6461c865f44f563b952b26b9" prot="public" virt="virtual"><scope>IoPython</scope><name>write_array</name></member>
      <member refid="structIoPython_1ac595084b6cd0176e28fc99d37c43243c" prot="public" virt="virtual"><scope>IoPython</scope><name>write_array</name></member>
      <member refid="structIoPython_1ade42cf0b6ea3011dd2c7ec8d63c8c229" prot="public" virt="virtual"><scope>IoPython</scope><name>write_array</name></member>
      <member refid="structIo_1a87619feba822519d2db112e848ebd1a0" prot="public" virt="non-virtual" ambiguityscope="Io::"><scope>IoPython</scope><name>write_array</name></member>
      <member refid="structIoPython_1a3acf06887d9d5caaefe1d498f6acc307" prot="public" virt="virtual"><scope>IoPython</scope><name>write_bool</name></member>
      <member refid="structIoPython_1a83551dd6d835cd7376c89f85b7d34b5e" prot="private" virt="non-virtual"><scope>IoPython</scope><name>write_in_python</name></member>
      <member refid="structIoPython_1ae11a5344779b2f014adfc4494b5aa102" prot="public" virt="virtual"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIoPython_1a99dcf2302ae757901cbb41de02e5f744" prot="public" virt="virtual"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIoPython_1a5edcf340a035fb5cc9e1a1b05c59d97c" prot="public" virt="virtual"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIoPython_1ad4a36f6d20ae6060853ff22a4ce4bb04" prot="public" virt="virtual"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIoPython_1a8a8989fc1970945310e8ba43ac5e1d6c" prot="public" virt="virtual"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIoPython_1a95f8ae3a328a807d95361245bbbb30ca" prot="public" virt="virtual"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIo_1af2dd662246ce54925bf4c8a740143c9e" prot="public" virt="non-virtual" ambiguityscope="Io::"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIo_1aaf8528d5a8f8d9f3524472db6573a69a" prot="public" virt="non-virtual" ambiguityscope="Io::"><scope>IoPython</scope><name>write_list</name></member>
      <member refid="structIoPython_1a6ac908e9b7fc3ab629effc67f3e3197c" prot="public" virt="virtual"><scope>IoPython</scope><name>write_number</name></member>
      <member refid="structIoPython_1aefebea20e857e120f68d446ebd7b0234" prot="public" virt="virtual"><scope>IoPython</scope><name>write_number</name></member>
      <member refid="structIoPython_1a80d1758f204c4e297aba633434f1fc90" prot="public" virt="virtual"><scope>IoPython</scope><name>write_number</name></member>
      <member refid="structIoPython_1aa2a26eec4c01566bc6a91ed09b3bdd57" prot="public" virt="virtual"><scope>IoPython</scope><name>write_word</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
