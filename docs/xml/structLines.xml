<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structLines" kind="struct" language="C++" prot="public">
    <compoundname>Lines</compoundname>
    <includes refid="lines_8hpp" local="no">lines.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structLines_1aa0a534f51f3d1cd1b50147ab75332426" prot="public" static="no" mutable="no">
        <type><ref refid="structParameters" kindref="compound">Parameters</ref></type>
        <definition>Parameters Lines::parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="12" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLines_1a13e95b832d6c0e6155d7428d3baeda50" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structLineProducingSpecies" kindref="compound">LineProducingSpecies</ref> &gt;</type>
        <definition>vector&lt;LineProducingSpecies&gt; Lines::lineProducingSpecies</definition>
        <argsstring></argsstring>
        <name>lineProducingSpecies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="14" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLines_1a295ed19b07cbf12d7de5df9aa8e955ff" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Vector&lt;Real&gt; Lines::line</definition>
        <argsstring></argsstring>
        <name>line</name>
        <briefdescription>
<para>[Hz] line center frequencies (NOT ordered!) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="17" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLines_1a8b97fbc040e4b93e2d21625ff12398a0" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref> &gt;</type>
        <definition>Vector&lt;Size&gt; Lines::nrad_cum</definition>
        <argsstring></argsstring>
        <name>nrad_cum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="20" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLines_1af9cf542168fd2ee7b2e79be80b37c1b5" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1ac9d1a399bc9eae71d5719b37a09745f6" kindref="member">Matrix</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Matrix&lt;Real&gt; Lines::emissivity</definition>
        <argsstring></argsstring>
        <name>emissivity</name>
        <briefdescription>
<para>line emissivity (p, lid) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="27" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLines_1a741fe96da8980462c8783e523b8a3140" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1ac9d1a399bc9eae71d5719b37a09745f6" kindref="member">Matrix</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Matrix&lt;Real&gt; Lines::opacity</definition>
        <argsstring></argsstring>
        <name>opacity</name>
        <briefdescription>
<para>line opacity (p, lid) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="28" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structLines_1a63038a2d974b84a89cbc8603d79acebd" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1ac9d1a399bc9eae71d5719b37a09745f6" kindref="member">Matrix</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Matrix&lt;Real&gt; Lines::inverse_width</definition>
        <argsstring></argsstring>
        <name>inverse_width</name>
        <briefdescription>
<para>inverse line width (p, lid) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="29" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structLines_1a0c7b0e1fae4a507d1933f585ae7eaa6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::read</definition>
        <argsstring>(const Io &amp;io)</argsstring>
        <name>read</name>
        <param>
          <type>const <ref refid="structIo" kindref="compound">Io</ref> &amp;</type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reader for the <ref refid="structLines" kindref="compound">Lines</ref> data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">io</parametername>
</parameternamelist>
<parameterdescription>
<para>: io object to read with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>: model parameters object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Read and set nlspecs</para><para>Read line producing species data</para><para>Set nrad_cum, a helper variable for determining indices</para><para>Extract nlines</para><para>Set and sort lines and their indices </para>        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="31" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp" bodystart="12" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1a69c684a6b657e2da705f562d32e2cd3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::write</definition>
        <argsstring>(const Io &amp;io) const</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="structIo" kindref="compound">Io</ref> &amp;</type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writer for the <ref refid="structLines" kindref="compound">Lines</ref> data <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">io</parametername>
</parameternamelist>
<parameterdescription>
<para>io object to write with </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="32" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp" bodystart="78" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1aa12df3da88e8d62e9f4a7972de122081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::iteration_using_LTE</definition>
        <argsstring>(const Double2 &amp;abundance, const Vector&lt; Real &gt; &amp;temperature)</argsstring>
        <name>iteration_using_LTE</name>
        <param>
          <type>const <ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref> &amp;</type>
          <declname>abundance</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>temperature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="34" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp" bodystart="89" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1a3935e8fbf7b592c840a7114348e61978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::iteration_using_statistical_equilibrium</definition>
        <argsstring>(const Double2 &amp;abundance, const Vector&lt; Real &gt; &amp;temperature, const Real pop_prec)</argsstring>
        <name>iteration_using_statistical_equilibrium</name>
        <param>
          <type>const <ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref> &amp;</type>
          <declname>abundance</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref></type>
          <declname>pop_prec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="38" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp" bodystart="116" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1a6a23ed2de2f5469b3f129e36e62d2d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::iteration_using_Ng_acceleration</definition>
        <argsstring>(const Real pop_prec)</argsstring>
        <name>iteration_using_Ng_acceleration</name>
        <param>
          <type>const <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref></type>
          <declname>pop_prec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="43" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp" bodystart="102" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1ab8cbd1a642040ce8e679f617e82683a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lines::index</definition>
        <argsstring>(const Size p, const Size line_index) const</argsstring>
        <name>index</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>line_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1a56e2f2718080e878e9121e14ed4dc5ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lines::line_index</definition>
        <argsstring>(const Size l, const Size k) const</argsstring>
        <name>line_index</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1a28f3d57745ffcc9b3f144b24dcc2ba4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
        <definition>Size Lines::index</definition>
        <argsstring>(const Size p, const Size l, const Size k) const</argsstring>
        <name>index</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1aaa0b4d40e79b6d3729f190a7d77a36a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::set_emissivity_and_opacity</definition>
        <argsstring>()</argsstring>
        <name>set_emissivity_and_opacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1ab22ec73cb2ff56144e8ab803b9cae550" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::set_inverse_width</definition>
        <argsstring>(const Thermodynamics &amp;thermodynamics)</argsstring>
        <name>set_inverse_width</name>
        <param>
          <type>const <ref refid="structThermodynamics" kindref="compound">Thermodynamics</ref> &amp;</type>
          <declname>thermodynamics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structLines_1adf2b64375310e0fcc236dd385c3d86ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lines::gather_emissivities_and_opacities</definition>
        <argsstring>()</argsstring>
        <name>gather_emissivities_and_opacities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="53" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp" bodystart="133" bodyend="194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="79">
        <label>Lines</label>
        <link refid="structLines"/>
        <childnode refid="80" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>lineProducingSpecies</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>Parameters</label>
        <link refid="structParameters"/>
      </node>
      <node id="81">
        <label>vector&lt; LineProducingSpecies &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" line="11" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.hpp" bodystart="10" bodyend="54"/>
    <listofallmembers>
      <member refid="structLines_1af9cf542168fd2ee7b2e79be80b37c1b5" prot="public" virt="non-virtual"><scope>Lines</scope><name>emissivity</name></member>
      <member refid="structLines_1adf2b64375310e0fcc236dd385c3d86ab" prot="public" virt="non-virtual"><scope>Lines</scope><name>gather_emissivities_and_opacities</name></member>
      <member refid="structLines_1ab8cbd1a642040ce8e679f617e82683a3" prot="public" virt="non-virtual"><scope>Lines</scope><name>index</name></member>
      <member refid="structLines_1a28f3d57745ffcc9b3f144b24dcc2ba4e" prot="public" virt="non-virtual"><scope>Lines</scope><name>index</name></member>
      <member refid="structLines_1a63038a2d974b84a89cbc8603d79acebd" prot="public" virt="non-virtual"><scope>Lines</scope><name>inverse_width</name></member>
      <member refid="structLines_1aa12df3da88e8d62e9f4a7972de122081" prot="public" virt="non-virtual"><scope>Lines</scope><name>iteration_using_LTE</name></member>
      <member refid="structLines_1a6a23ed2de2f5469b3f129e36e62d2d8e" prot="public" virt="non-virtual"><scope>Lines</scope><name>iteration_using_Ng_acceleration</name></member>
      <member refid="structLines_1a3935e8fbf7b592c840a7114348e61978" prot="public" virt="non-virtual"><scope>Lines</scope><name>iteration_using_statistical_equilibrium</name></member>
      <member refid="structLines_1a295ed19b07cbf12d7de5df9aa8e955ff" prot="public" virt="non-virtual"><scope>Lines</scope><name>line</name></member>
      <member refid="structLines_1a56e2f2718080e878e9121e14ed4dc5ac" prot="public" virt="non-virtual"><scope>Lines</scope><name>line_index</name></member>
      <member refid="structLines_1a13e95b832d6c0e6155d7428d3baeda50" prot="public" virt="non-virtual"><scope>Lines</scope><name>lineProducingSpecies</name></member>
      <member refid="structLines_1a8b97fbc040e4b93e2d21625ff12398a0" prot="public" virt="non-virtual"><scope>Lines</scope><name>nrad_cum</name></member>
      <member refid="structLines_1a741fe96da8980462c8783e523b8a3140" prot="public" virt="non-virtual"><scope>Lines</scope><name>opacity</name></member>
      <member refid="structLines_1aa0a534f51f3d1cd1b50147ab75332426" prot="public" virt="non-virtual"><scope>Lines</scope><name>parameters</name></member>
      <member refid="structLines_1a0c7b0e1fae4a507d1933f585ae7eaa6d" prot="public" virt="non-virtual"><scope>Lines</scope><name>read</name></member>
      <member refid="structLines_1aaa0b4d40e79b6d3729f190a7d77a36a2" prot="public" virt="non-virtual"><scope>Lines</scope><name>set_emissivity_and_opacity</name></member>
      <member refid="structLines_1ab22ec73cb2ff56144e8ab803b9cae550" prot="public" virt="non-virtual"><scope>Lines</scope><name>set_inverse_width</name></member>
      <member refid="structLines_1a69c684a6b657e2da705f562d32e2cd3c" prot="public" virt="non-virtual"><scope>Lines</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
