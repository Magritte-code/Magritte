<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="points_8cpp" kind="file" language="C++">
    <compoundname>points.cpp</compoundname>
    <includes local="no">assert.h</includes>
    <includes refid="points_8hpp" local="yes">points.hpp</includes>
    <incdepgraph>
      <node id="375">
        <label>list</label>
      </node>
      <node id="380">
        <label>limits</label>
      </node>
      <node id="370">
        <label>assert.h</label>
      </node>
      <node id="377">
        <label>Eigen/Core</label>
      </node>
      <node id="376">
        <label>string</label>
      </node>
      <node id="382">
        <label>exception</label>
      </node>
      <node id="372">
        <label>io/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="379">
        <label>model/parameters/parameters.hpp</label>
        <link refid="parameters_8hpp"/>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
      </node>
      <node id="381">
        <label>tools/setOnce.hpp</label>
        <link refid="setOnce_8hpp"/>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
      </node>
      <node id="374">
        <label>vector</label>
      </node>
      <node id="371">
        <label>points.hpp</label>
        <link refid="points_8hpp"/>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>paracabs.hpp</label>
      </node>
      <node id="373">
        <label>tools/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
      </node>
      <node id="383">
        <label>iostream</label>
      </node>
      <node id="369">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/points/points.cpp</label>
        <link refid="points_8cpp"/>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="points_8cpp_1af1e7949a3ee58158ef099851093bf734" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <initializer>= &quot;geometry/points/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/points/points.cpp" line="5" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/points/points.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="points_8hpp" kindref="compound">points.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;geometry/points/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structPoints_1a467f8a2b90de42d7053103bc032a2443" kindref="member">Points :: read</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref>&amp;<sp/>io)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>points...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.set_npoints<sp/>(io.<ref refid="structIo_1afb72811abb76f805a35df321ffbf07dc" kindref="member">get_length</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.set_npoints<sp/>(io.<ref refid="structIo_1afb72811abb76f805a35df321ffbf07dc" kindref="member">get_length</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;velocity&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>.resize<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1a524531db6f7afcd3659ea70578052d24" kindref="member">velocity</ref>.resize<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>position_buffer<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref>(3));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>velocity_buffer<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref>(3));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">,<sp/>position_buffer);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;velocity&quot;</highlight><highlight class="normal">,<sp/>velocity_buffer);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints();<sp/>p++)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p]<sp/>=<sp/><ref refid="types_8hpp_1a9ba03c9169409d1848791ddf34116c28" kindref="member">Vector3D</ref><sp/>(position_buffer[p][0],</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_buffer[p][1],</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_buffer[p][2]<sp/>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a524531db6f7afcd3659ea70578052d24" kindref="member">velocity</ref>[p]<sp/>=<sp/><ref refid="types_8hpp_1a9ba03c9169409d1848791ddf34116c28" kindref="member">Vector3D</ref><sp/>(velocity_buffer[p][0],</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_buffer[p][1],</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_buffer[p][2]<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.set_totnnbs<sp/>(io.<ref refid="structIo_1afb72811abb76f805a35df321ffbf07dc" kindref="member">get_length</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;neighbors&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1a893524ac55a3fd56ce1cfe385c258774" kindref="member">cum_n_neighbors</ref>.resize<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a6ba424b2a313a9453054037f784b32fd" kindref="member">n_neighbors</ref>.resize<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a88e16411da898bb508d0971ac5be7db6" kindref="member">neighbors</ref>.resize<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.totnnbs());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1ad8db00e516c6686e4844c7ad6bfbd28e" kindref="member">read_list</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;n_neighbors&quot;</highlight><highlight class="normal">,<sp/><ref refid="structPoints_1a6ba424b2a313a9453054037f784b32fd" kindref="member">n_neighbors</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1ad8db00e516c6686e4844c7ad6bfbd28e" kindref="member">read_list</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+<sp/><sp/></highlight><highlight class="stringliteral">&quot;neighbors&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><ref refid="structPoints_1a88e16411da898bb508d0971ac5be7db6" kindref="member">neighbors</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1a893524ac55a3fd56ce1cfe385c258774" kindref="member">cum_n_neighbors</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>p<sp/>=<sp/>1;<sp/>p<sp/>&lt;<sp/><ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints();<sp/>p++)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a893524ac55a3fd56ce1cfe385c258774" kindref="member">cum_n_neighbors</ref>[p]<sp/>=<sp/><ref refid="structPoints_1a893524ac55a3fd56ce1cfe385c258774" kindref="member">cum_n_neighbors</ref>[p-1]<sp/>+<sp/><ref refid="structPoints_1a6ba424b2a313a9453054037f784b32fd" kindref="member">n_neighbors</ref>[p-1];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1a524531db6f7afcd3659ea70578052d24" kindref="member">velocity</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPoints_1a893524ac55a3fd56ce1cfe385c258774" kindref="member">cum_n_neighbors</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a6ba424b2a313a9453054037f784b32fd" kindref="member">n_neighbors</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a88e16411da898bb508d0971ac5be7db6" kindref="member">neighbors</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nbs.resize<sp/>(parameters.npoints()*nnbs);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(Size<sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>parameters.npoints();<sp/>p++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>Size<sp/><sp/><sp/><sp/><sp/>n_nbs<sp/>=<sp/><sp/><sp/><sp/><sp/>n_neighbors[p];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>Size<sp/>cum_n_nbs<sp/>=<sp/>cum_n_neighbors[p];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(Size<sp/>i<sp/>=<sp/>0;<sp/>(i<sp/>&lt;<sp/>n_nbs)<sp/>&amp;&amp;<sp/>(i<sp/>&lt;<sp/>nnbs);<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbs[p*nnbs+i]<sp/>=<sp/>neighbors[cum_n_nbs+i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(Size<sp/>i<sp/>=<sp/>n_nbs;<sp/>i<sp/>&lt;<sp/>nnbs;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbs[p*nnbs+i]<sp/>=<sp/>neighbors[cum_n_nbs+n_nbs-1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nbs.copy_vec_to_ptr<sp/>();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structPoints_1a59d34f7ee9bb90e848626e27e154b8b4" kindref="member">Points :: write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref>&amp;<sp/>io)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>position_buffer<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref>(3));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>velocity_buffer<sp/>(<ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref>(3));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="structPoints_1ac6aa15f2c425a2656f547d2cae234a46" kindref="member">parameters</ref>.npoints();<sp/>p++)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position_buffer[p]<sp/>=<sp/>{<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].x(),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].y(),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].z()<sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_buffer[p]<sp/>=<sp/>{<ref refid="structPoints_1a524531db6f7afcd3659ea70578052d24" kindref="member">velocity</ref>[p].x(),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a524531db6f7afcd3659ea70578052d24" kindref="member">velocity</ref>[p].y(),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structPoints_1a524531db6f7afcd3659ea70578052d24" kindref="member">velocity</ref>[p].z()<sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1aa73fe79d27fbaf31cbea124769e13a2e" kindref="member">write_array</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;position&quot;</highlight><highlight class="normal">,<sp/>position_buffer);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1aa73fe79d27fbaf31cbea124769e13a2e" kindref="member">write_array</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;velocity&quot;</highlight><highlight class="normal">,<sp/>velocity_buffer);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1a88b9ed3d29a39626f53c5204757603d3" kindref="member">write_list</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;n_neighbors&quot;</highlight><highlight class="normal">,<sp/><ref refid="structPoints_1a6ba424b2a313a9453054037f784b32fd" kindref="member">n_neighbors</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1a88b9ed3d29a39626f53c5204757603d3" kindref="member">write_list</ref><sp/>(<ref refid="points_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+<sp/><sp/></highlight><highlight class="stringliteral">&quot;neighbors&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><ref refid="structPoints_1a88e16411da898bb508d0971ac5be7db6" kindref="member">neighbors</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/points/points.cpp"/>
  </compounddef>
</doxygen>
