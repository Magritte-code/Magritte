<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structModel" kind="struct" language="C++" prot="public">
    <compoundname>Model</compoundname>
    <includes refid="model_8hpp" local="no">model.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structModel_1a1f454447ad14c42073d01b3288860d7f" prot="public" static="no">
        <name>SpectralDiscretisation</name>
        <enumvalue id="structModel_1a1f454447ad14c42073d01b3288860d7fa727e4afe9f83a25f4fd35a08ce0511ff" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structModel_1a1f454447ad14c42073d01b3288860d7fa22ee57670ae04760616386465e818c6a" prot="public">
          <name>SD_Lines</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structModel_1a1f454447ad14c42073d01b3288860d7fa786d35eb6cc8f8863abc8dc7027a8563" prot="public">
          <name>SD_Image</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="26" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structModel_1a648f41608b8f8a859e1b00ddf4640414" prot="public" static="no" mutable="no">
        <type><ref refid="structParameters" kindref="compound">Parameters</ref></type>
        <definition>Parameters Model::parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="18" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a9eac0359f751ae78cbfe52497465f91d" prot="public" static="no" mutable="no">
        <type><ref refid="structGeometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry Model::geometry</definition>
        <argsstring></argsstring>
        <name>geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="19" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1ab371cdf43cb5dc99c968daaf4a492a7a" prot="public" static="no" mutable="no">
        <type><ref refid="structChemistry" kindref="compound">Chemistry</ref></type>
        <definition>Chemistry Model::chemistry</definition>
        <argsstring></argsstring>
        <name>chemistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="20" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a534b5df30d90b66521e0bf7c1a517447" prot="public" static="no" mutable="no">
        <type><ref refid="structThermodynamics" kindref="compound">Thermodynamics</ref></type>
        <definition>Thermodynamics Model::thermodynamics</definition>
        <argsstring></argsstring>
        <name>thermodynamics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="21" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1ac5a521af88897ede48b542c798137580" prot="public" static="no" mutable="no">
        <type><ref refid="structLines" kindref="compound">Lines</ref></type>
        <definition>Lines Model::lines</definition>
        <argsstring></argsstring>
        <name>lines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="22" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a1a6983c58adaf88fab7cdfbd5a8ecd71" prot="public" static="no" mutable="no">
        <type><ref refid="structRadiation" kindref="compound">Radiation</ref></type>
        <definition>Radiation Model::radiation</definition>
        <argsstring></argsstring>
        <name>radiation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="23" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1ac79b6fcfb4924c574cbe726495b78e79" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structImage" kindref="compound">Image</ref> &gt;</type>
        <definition>vector&lt;Image&gt; Model::images</definition>
        <argsstring></argsstring>
        <name>images</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="24" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a6cd0d39fe881fe2423d20d3f5809a6ed" prot="public" static="no" mutable="no">
        <type>enum <ref refid="structModel_1a1f454447ad14c42073d01b3288860d7f" kindref="member">Model::SpectralDiscretisation</ref></type>
        <definition>enum Model::SpectralDiscretisation
          Model::spectralDiscretisation</definition>
        <argsstring></argsstring>
        <name>spectralDiscretisation</name>
        <initializer>= <ref refid="structModel_1a1f454447ad14c42073d01b3288860d7fa727e4afe9f83a25f4fd35a08ce0511ff" kindref="member">None</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="27" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1aeaabd1c3bb33339610ad41bcc4a86edb" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref></type>
        <definition>Double1 Model::error_max</definition>
        <argsstring></argsstring>
        <name>error_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="61" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1af6f9459273c2d7b9893f5ca70de86902" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref></type>
        <definition>Double1 Model::error_mean</definition>
        <argsstring></argsstring>
        <name>error_mean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="62" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a5dd00bc9aab9736d4a3858a697c23bcc" prot="public" static="no" mutable="no">
        <type>pc::multi_threading::ThreadPrivate&lt; <ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>pc::multi_threading::ThreadPrivate&lt;Vector&lt;Real&gt; &gt; Model::a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="64" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a099e1593fb76e2c017fc44016217ea0e" prot="public" static="no" mutable="no">
        <type>pc::multi_threading::ThreadPrivate&lt; <ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>pc::multi_threading::ThreadPrivate&lt;Vector&lt;Real&gt; &gt; Model::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="65" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a52bd9b3878f8b717554a27d10edbf821" prot="public" static="no" mutable="no">
        <type>pc::multi_threading::ThreadPrivate&lt; <ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>pc::multi_threading::ThreadPrivate&lt;Vector&lt;Real&gt; &gt; Model::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="66" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1a95e9194fb56268134bfa3348784ac80c" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1ac9d1a399bc9eae71d5719b37a09745f6" kindref="member">Matrix</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Matrix&lt;Real&gt; Model::eta</definition>
        <argsstring></argsstring>
        <name>eta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="107" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1aa4bce862cb4320487889704e1dc42f60" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1ac9d1a399bc9eae71d5719b37a09745f6" kindref="member">Matrix</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Matrix&lt;Real&gt; Model::chi</definition>
        <argsstring></argsstring>
        <name>chi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="108" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structModel_1aa5e7aaa1c3776927b02dd1a456987f4a" prot="public" static="no" mutable="no">
        <type><ref refid="types_8hpp_1ac9d1a399bc9eae71d5719b37a09745f6" kindref="member">Matrix</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Matrix&lt;Real&gt; Model::boundary_condition</definition>
        <argsstring></argsstring>
        <name>boundary_condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="110" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structModel_1ae3b375de5f6df4faf74a95d64748e048" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Model::Model</definition>
        <argsstring>()</argsstring>
        <name>Model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="29" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a522300eb06394ff3c35e5f1f0b74525d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Model::Model</definition>
        <argsstring>(const string name)</argsstring>
        <name>Model</name>
        <param>
          <type>const string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="30" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a4233c49082cede0454dee83448f8bb12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::read</definition>
        <argsstring>(const Io &amp;io)</argsstring>
        <name>read</name>
        <param>
          <type>const <ref refid="structIo" kindref="compound">Io</ref> &amp;</type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="36" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="7" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1ace727aca6d202da8082b9b65fe440b55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Model::write</definition>
        <argsstring>(const Io &amp;io) const</argsstring>
        <name>write</name>
        <param>
          <type>const <ref refid="structIo" kindref="compound">Io</ref> &amp;</type>
          <declname>io</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="37" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="42" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a355fadfef3a7e9bbd0b4018e820847d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Model::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="39" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1ae2c99ec0e67fd0e411d90125a3d0e9c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Model::write</definition>
        <argsstring>() const</argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="40" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1aa24504d2344105d8b476ac705fcc7113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_inverse_line_widths</definition>
        <argsstring>()</argsstring>
        <name>compute_inverse_line_widths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="42" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a15831e027ae337a5c3ca738401a5c34f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_spectral_discretisation</definition>
        <argsstring>()</argsstring>
        <name>compute_spectral_discretisation</name>
        <briefdescription>
<para>Compute spectral (=frequency) discretisation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="43" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="66" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1aa34355e0a56e93faf53804d473a568ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_spectral_discretisation</definition>
        <argsstring>(const Real width)</argsstring>
        <name>compute_spectral_discretisation</name>
        <param>
          <type>const <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref></type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computer for spectral (=frequency) discretisation Gives same frequency bins to each point <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>: corresponding line width for frequency bins </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="44" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="158" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a010813aa629f0d9c32fd01bd79cf6388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_spectral_discretisation</definition>
        <argsstring>(const long double nu_min, const long double nu_max)</argsstring>
        <name>compute_spectral_discretisation</name>
        <param>
          <type>const long double</type>
          <declname>nu_min</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>nu_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computer for spectral (=frequency) discretisation Gives same frequency bins to each point <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">min</parametername>
</parameternamelist>
<parameterdescription>
<para>: minimal frequency </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>: maximal frequency </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="46" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="251" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a163e6fe538d9c79629a98fb3c8b87f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_LTE_level_populations</definition>
        <argsstring>()</argsstring>
        <name>compute_LTE_level_populations</name>
        <briefdescription>
<para>Computer for the level populations, assuming LTE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="49" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="281" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a64e452b07ee48140df1cfeca4e9d64ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_radiation_field</definition>
        <argsstring>()</argsstring>
        <name>compute_radiation_field</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a716cdb6630f6114a61195975ae08744f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_radiation_field_feautrier_order_2</definition>
        <argsstring>()</argsstring>
        <name>compute_radiation_field_feautrier_order_2</name>
        <briefdescription>
<para>Computer for the radiation field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="51" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="313" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1ac3e4cab547058762bb8b53c1d310f002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_radiation_field_shortchar_order_0</definition>
        <argsstring>()</argsstring>
        <name>compute_radiation_field_shortchar_order_0</name>
        <briefdescription>
<para>Computer for the radiation field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="52" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="294" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a7c4e2d3a85540cd30d5e1530ce414200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_Jeff</definition>
        <argsstring>()</argsstring>
        <name>compute_Jeff</name>
        <briefdescription>
<para>Compute the effective mean intensity in a line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="53" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="332" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a4658ebd317dd34cb8acb801856948ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_level_populations_from_stateq</definition>
        <argsstring>()</argsstring>
        <name>compute_level_populations_from_stateq</name>
        <briefdescription>
<para>compute level populations from statistical equilibrium </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="54" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="376" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a497d6f02aeeb163c97fc6170dfe70f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_level_populations</definition>
        <argsstring>(const bool use_Ng_acceleration, const long max_niterations)</argsstring>
        <name>compute_level_populations</name>
        <param>
          <type>const bool</type>
          <declname>use_Ng_acceleration</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>max_niterations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute level populations self-consistenly with the radiation field assuming statistical equilibrium (detailed balance for the levels) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">io</parametername>
</parameternamelist>
<parameterdescription>
<para>: io object (for writing level populations) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">use_Ng_acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>: true if Ng acceleration has to be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_niterations</parametername>
</parameternamelist>
<parameterdescription>
<para>: maximum number of iterations </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of iteration done </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="55" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="394" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a5c97f16b051aa58327a10f85ffd09c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::compute_image</definition>
        <argsstring>(const Size ray_nr)</argsstring>
        <name>compute_image</name>
        <param>
          <type>const <ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref></type>
          <declname>ray_nr</declname>
        </param>
        <briefdescription>
<para>Computer for the radiation field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="59" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="475" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a907f14b6aae069ab154bec87198eb220" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Model::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="69" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="69" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1ab6450cb707178358158339454a908c6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8hpp_1a959df20affa391f0d7913ff0349bdb05" kindref="member">Vector</ref>&lt; <ref refid="types_8hpp_1acd9440203db8e3b36d61f62fe6567258" kindref="member">Real</ref> &gt;</type>
        <definition>Vector&lt;Real&gt; Model::add</definition>
        <argsstring>()</argsstring>
        <name>add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="92" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="92" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a156ff261b0be5cb3e7a5b7ca97270c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::set_eta_and_chi</definition>
        <argsstring>()</argsstring>
        <name>set_eta_and_chi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="112" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="492" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="structModel_1a434e9ff57a0fd968b32d9aa781db5b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Model::set_boundary_condition</definition>
        <argsstring>()</argsstring>
        <name>set_boundary_condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="113" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp" bodystart="501" bodyend="507"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="94">
        <label>Scattering</label>
        <link refid="structScattering"/>
        <childnode refid="95" relation="usage">
          <edgelabel>opacity_scat</edgelabel>
        </childnode>
        <childnode refid="96" relation="usage">
          <edgelabel>phase</edgelabel>
        </childnode>
      </node>
      <node id="104">
        <label>vector&lt; string &gt;</label>
      </node>
      <node id="102">
        <label>Chemistry</label>
        <link refid="structChemistry"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="103" relation="usage">
          <edgelabel>species</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>Lines</label>
        <link refid="structLines"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>lineProducingSpecies</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>Frequencies</label>
        <link refid="structFrequencies"/>
        <childnode refid="92" relation="usage">
          <edgelabel>corresponding_k_for_tran</edgelabel>
          <edgelabel>corresponding_l_for_spec</edgelabel>
          <edgelabel>corresponding_z_for_line</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>appears_in_line_integral</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>Temperature</label>
        <link refid="structTemperature"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
      </node>
      <node id="106">
        <label>vector&lt; double &gt;</label>
      </node>
      <node id="89">
        <label>vector&lt; Image &gt;</label>
      </node>
      <node id="88">
        <label>Rays</label>
        <link refid="structRays"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
      </node>
      <node id="86">
        <label>Parameters</label>
        <link refid="structParameters"/>
      </node>
      <node id="95">
        <label>vector&lt; Real &gt;</label>
      </node>
      <node id="87">
        <label>Boundary</label>
        <link refid="structBoundary"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>Points</label>
        <link refid="structPoints"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
      </node>
      <node id="99">
        <label>Turbulence</label>
        <link refid="structTurbulence"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>vector&lt; bool &gt;</label>
      </node>
      <node id="97">
        <label>Thermodynamics</label>
        <link refid="structThermodynamics"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="98" relation="usage">
          <edgelabel>temperature</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>turbulence</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>Geometry</label>
        <link refid="structGeometry"/>
        <childnode refid="85" relation="usage">
          <edgelabel>points</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="87" relation="usage">
          <edgelabel>boundary</edgelabel>
        </childnode>
        <childnode refid="88" relation="usage">
          <edgelabel>rays</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>vector&lt; Real2 &gt;</label>
      </node>
      <node id="90">
        <label>Radiation</label>
        <link refid="structRadiation"/>
        <childnode refid="91" relation="usage">
          <edgelabel>frequencies</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>scattering</edgelabel>
        </childnode>
        <childnode refid="96" relation="usage">
          <edgelabel>I_bdy</edgelabel>
        </childnode>
      </node>
      <node id="92">
        <label>vector&lt; Size &gt;</label>
      </node>
      <node id="101">
        <label>vector&lt; LineProducingSpecies &gt;</label>
      </node>
      <node id="83">
        <label>Model</label>
        <link refid="structModel"/>
        <childnode refid="84" relation="usage">
          <edgelabel>geometry</edgelabel>
        </childnode>
        <childnode refid="89" relation="usage">
          <edgelabel>images</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>radiation</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>thermodynamics</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>lines</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>chemistry</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>error_mean</edgelabel>
          <edgelabel>error_max</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>Species</label>
        <link refid="structSpecies"/>
        <childnode refid="86" relation="usage">
          <edgelabel>parameters</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>abundance</edgelabel>
          <edgelabel>abundance_init</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>vector&lt; Double1 &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" line="17" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/model.hpp" bodystart="16" bodyend="114"/>
    <listofallmembers>
      <member refid="structModel_1a5dd00bc9aab9736d4a3858a697c23bcc" prot="public" virt="non-virtual"><scope>Model</scope><name>a</name></member>
      <member refid="structModel_1ab6450cb707178358158339454a908c6d" prot="public" virt="non-virtual"><scope>Model</scope><name>add</name></member>
      <member refid="structModel_1a099e1593fb76e2c017fc44016217ea0e" prot="public" virt="non-virtual"><scope>Model</scope><name>b</name></member>
      <member refid="structModel_1aa5e7aaa1c3776927b02dd1a456987f4a" prot="public" virt="non-virtual"><scope>Model</scope><name>boundary_condition</name></member>
      <member refid="structModel_1a52bd9b3878f8b717554a27d10edbf821" prot="public" virt="non-virtual"><scope>Model</scope><name>c</name></member>
      <member refid="structModel_1ab371cdf43cb5dc99c968daaf4a492a7a" prot="public" virt="non-virtual"><scope>Model</scope><name>chemistry</name></member>
      <member refid="structModel_1aa4bce862cb4320487889704e1dc42f60" prot="public" virt="non-virtual"><scope>Model</scope><name>chi</name></member>
      <member refid="structModel_1a5c97f16b051aa58327a10f85ffd09c39" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_image</name></member>
      <member refid="structModel_1aa24504d2344105d8b476ac705fcc7113" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_inverse_line_widths</name></member>
      <member refid="structModel_1a7c4e2d3a85540cd30d5e1530ce414200" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_Jeff</name></member>
      <member refid="structModel_1a497d6f02aeeb163c97fc6170dfe70f0e" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_level_populations</name></member>
      <member refid="structModel_1a4658ebd317dd34cb8acb801856948ace" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_level_populations_from_stateq</name></member>
      <member refid="structModel_1a163e6fe538d9c79629a98fb3c8b87f23" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_LTE_level_populations</name></member>
      <member refid="structModel_1a64e452b07ee48140df1cfeca4e9d64ff" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_radiation_field</name></member>
      <member refid="structModel_1a716cdb6630f6114a61195975ae08744f" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_radiation_field_feautrier_order_2</name></member>
      <member refid="structModel_1ac3e4cab547058762bb8b53c1d310f002" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_radiation_field_shortchar_order_0</name></member>
      <member refid="structModel_1a15831e027ae337a5c3ca738401a5c34f" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_spectral_discretisation</name></member>
      <member refid="structModel_1aa34355e0a56e93faf53804d473a568ec" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_spectral_discretisation</name></member>
      <member refid="structModel_1a010813aa629f0d9c32fd01bd79cf6388" prot="public" virt="non-virtual"><scope>Model</scope><name>compute_spectral_discretisation</name></member>
      <member refid="structModel_1aeaabd1c3bb33339610ad41bcc4a86edb" prot="public" virt="non-virtual"><scope>Model</scope><name>error_max</name></member>
      <member refid="structModel_1af6f9459273c2d7b9893f5ca70de86902" prot="public" virt="non-virtual"><scope>Model</scope><name>error_mean</name></member>
      <member refid="structModel_1a95e9194fb56268134bfa3348784ac80c" prot="public" virt="non-virtual"><scope>Model</scope><name>eta</name></member>
      <member refid="structModel_1a9eac0359f751ae78cbfe52497465f91d" prot="public" virt="non-virtual"><scope>Model</scope><name>geometry</name></member>
      <member refid="structModel_1ac79b6fcfb4924c574cbe726495b78e79" prot="public" virt="non-virtual"><scope>Model</scope><name>images</name></member>
      <member refid="structModel_1ac5a521af88897ede48b542c798137580" prot="public" virt="non-virtual"><scope>Model</scope><name>lines</name></member>
      <member refid="structModel_1ae3b375de5f6df4faf74a95d64748e048" prot="public" virt="non-virtual"><scope>Model</scope><name>Model</name></member>
      <member refid="structModel_1a522300eb06394ff3c35e5f1f0b74525d" prot="public" virt="non-virtual"><scope>Model</scope><name>Model</name></member>
      <member refid="structModel_1a1f454447ad14c42073d01b3288860d7fa727e4afe9f83a25f4fd35a08ce0511ff" prot="public" virt="non-virtual"><scope>Model</scope><name>None</name></member>
      <member refid="structModel_1a648f41608b8f8a859e1b00ddf4640414" prot="public" virt="non-virtual"><scope>Model</scope><name>parameters</name></member>
      <member refid="structModel_1a1a6983c58adaf88fab7cdfbd5a8ecd71" prot="public" virt="non-virtual"><scope>Model</scope><name>radiation</name></member>
      <member refid="structModel_1a4233c49082cede0454dee83448f8bb12" prot="public" virt="non-virtual"><scope>Model</scope><name>read</name></member>
      <member refid="structModel_1a355fadfef3a7e9bbd0b4018e820847d0" prot="public" virt="non-virtual"><scope>Model</scope><name>read</name></member>
      <member refid="structModel_1a1f454447ad14c42073d01b3288860d7fa786d35eb6cc8f8863abc8dc7027a8563" prot="public" virt="non-virtual"><scope>Model</scope><name>SD_Image</name></member>
      <member refid="structModel_1a1f454447ad14c42073d01b3288860d7fa22ee57670ae04760616386465e818c6a" prot="public" virt="non-virtual"><scope>Model</scope><name>SD_Lines</name></member>
      <member refid="structModel_1a907f14b6aae069ab154bec87198eb220" prot="public" virt="non-virtual"><scope>Model</scope><name>set</name></member>
      <member refid="structModel_1a434e9ff57a0fd968b32d9aa781db5b00" prot="public" virt="non-virtual"><scope>Model</scope><name>set_boundary_condition</name></member>
      <member refid="structModel_1a156ff261b0be5cb3e7a5b7ca97270c2b" prot="public" virt="non-virtual"><scope>Model</scope><name>set_eta_and_chi</name></member>
      <member refid="structModel_1a1f454447ad14c42073d01b3288860d7f" prot="public" virt="non-virtual"><scope>Model</scope><name>SpectralDiscretisation</name></member>
      <member refid="structModel_1a6cd0d39fe881fe2423d20d3f5809a6ed" prot="public" virt="non-virtual"><scope>Model</scope><name>spectralDiscretisation</name></member>
      <member refid="structModel_1a534b5df30d90b66521e0bf7c1a517447" prot="public" virt="non-virtual"><scope>Model</scope><name>thermodynamics</name></member>
      <member refid="structModel_1ace727aca6d202da8082b9b65fe440b55" prot="public" virt="non-virtual"><scope>Model</scope><name>write</name></member>
      <member refid="structModel_1ae2c99ec0e67fd0e411d90125a3d0e9c1" prot="public" virt="non-virtual"><scope>Model</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
