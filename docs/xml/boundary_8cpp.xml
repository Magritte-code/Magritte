<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="boundary_8cpp" kind="file" language="C++">
    <compoundname>boundary.cpp</compoundname>
    <includes refid="boundary_8hpp" local="yes">boundary.hpp</includes>
    <incdepgraph>
      <node id="271">
        <label>list</label>
      </node>
      <node id="276">
        <label>limits</label>
      </node>
      <node id="273">
        <label>Eigen/Core</label>
      </node>
      <node id="272">
        <label>string</label>
      </node>
      <node id="278">
        <label>exception</label>
      </node>
      <node id="268">
        <label>io/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>model/parameters/parameters.hpp</label>
        <link refid="parameters_8hpp"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>tools/setOnce.hpp</label>
        <link refid="setOnce_8hpp"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="267">
        <label>boundary.hpp</label>
        <link refid="boundary_8hpp"/>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="270">
        <label>vector</label>
      </node>
      <node id="274">
        <label>paracabs.hpp</label>
      </node>
      <node id="269">
        <label>tools/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>iostream</label>
      </node>
      <node id="266">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/boundary/boundary.cpp</label>
        <link refid="boundary_8cpp"/>
        <childnode refid="267" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <initializer>= &quot;geometry/boundary/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/boundary/boundary.cpp" line="4" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/boundary/boundary.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="boundary_8hpp" kindref="compound">boundary.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;geometry/boundary/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structBoundary_1a889cafccaa29a30585e0812fb710cc1c" kindref="member">Boundary :: read</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref>&amp;<sp/>io)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>boundary...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resize<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a53753c59e5797fde6eca61cf0196a39b" kindref="member">point2boundary</ref>.resize<sp/>(<ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.npoints();<sp/>p++)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a53753c59e5797fde6eca61cf0196a39b" kindref="member">point2boundary</ref>[p]<sp/>=<sp/><ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.npoints();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>boundary<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.set_nboundary<sp/>(io.<ref refid="structIo_1afb72811abb76f805a35df321ffbf07dc" kindref="member">get_length</ref><sp/>(<ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;boundary2point&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a3130acc273ec208d43e6c0d001bd5bf6" kindref="member">boundary2point</ref>.resize<sp/>(<ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1ad8db00e516c6686e4844c7ad6bfbd28e" kindref="member">read_list</ref><sp/>(<ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;boundary2point&quot;</highlight><highlight class="normal">,<sp/><ref refid="structBoundary_1a3130acc273ec208d43e6c0d001bd5bf6" kindref="member">boundary2point</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>helper<sp/>variables<sp/>to<sp/>identify<sp/>the<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/><ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary();<sp/>b++)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a53753c59e5797fde6eca61cf0196a39b" kindref="member">point2boundary</ref>[<ref refid="structBoundary_1a3130acc273ec208d43e6c0d001bd5bf6" kindref="member">boundary2point</ref>[b]]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref><sp/><sp/>.resize<sp/>(<ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a279bf7c7493f9bf5cf0f4b841c8cad78" kindref="member">boundary_temperature</ref>.resize<sp/>(<ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a6d7f9a4d0e85b9f1c3145ff9f65ab54d" kindref="member">String1</ref><sp/>boundary_condition_str<sp/>(<ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1ad8db00e516c6686e4844c7ad6bfbd28e" kindref="member">read_list</ref><sp/>(<ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;boundary_temperature&quot;</highlight><highlight class="normal">,<sp/><ref refid="structBoundary_1a279bf7c7493f9bf5cf0f4b841c8cad78" kindref="member">boundary_temperature</ref>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1ad8db00e516c6686e4844c7ad6bfbd28e" kindref="member">read_list</ref><sp/>(<ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;boundary_condition&quot;</highlight><highlight class="normal">,<sp/>boundary_condition_str);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/><ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary();<sp/>b++)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boundary_condition_str[b].compare(</highlight><highlight class="stringliteral">&quot;zero&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>))<sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>[b]<sp/>=<sp/><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555ab9f6920de535f04ccfe34d670fa2c8a8" kindref="member">Zero</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boundary_condition_str[b].compare(</highlight><highlight class="stringliteral">&quot;thermal&quot;</highlight><highlight class="normal">))<sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>[b]<sp/>=<sp/><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555a2e9af1b21791671279eaa2d5ae4518c6" kindref="member">Thermal</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boundary_condition_str[b].compare(</highlight><highlight class="stringliteral">&quot;cmb&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>))<sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>[b]<sp/>=<sp/><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555af6a043c0a128c981134275eed4be7f2c" kindref="member">CMB</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a3130acc273ec208d43e6c0d001bd5bf6" kindref="member">boundary2point</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a53753c59e5797fde6eca61cf0196a39b" kindref="member">point2boundary</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref><sp/><sp/>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1a279bf7c7493f9bf5cf0f4b841c8cad78" kindref="member">boundary_temperature</ref>.copy_vec_to_ptr<sp/>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structBoundary_1a7a73cfbda5bc645488219dd442e26f55" kindref="member">Boundary :: write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref>&amp;<sp/>io)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="61"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Writing<sp/>boundary...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1a88b9ed3d29a39626f53c5204757603d3" kindref="member">write_list</ref><sp/>(<ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;boundary2point&quot;</highlight><highlight class="normal">,<sp/><ref refid="structBoundary_1a3130acc273ec208d43e6c0d001bd5bf6" kindref="member">boundary2point</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1a6d7f9a4d0e85b9f1c3145ff9f65ab54d" kindref="member">String1</ref><sp/>boundary_condition_str<sp/>(<ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/><ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary();<sp/>b++)<sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>[b])</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555ab9f6920de535f04ccfe34d670fa2c8a8" kindref="member">Zero</ref><sp/><sp/><sp/><sp/>:<sp/>boundary_condition_str[b]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;zero&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555a2e9af1b21791671279eaa2d5ae4518c6" kindref="member">Thermal</ref><sp/>:<sp/>boundary_condition_str[b]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;thermal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555af6a043c0a128c981134275eed4be7f2c" kindref="member">CMB</ref><sp/><sp/><sp/><sp/><sp/>:<sp/>boundary_condition_str[b]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cmb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1a88b9ed3d29a39626f53c5204757603d3" kindref="member">write_list</ref><sp/>(<ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;boundary_temperature&quot;</highlight><highlight class="normal">,<sp/><ref refid="structBoundary_1a279bf7c7493f9bf5cf0f4b841c8cad78" kindref="member">boundary_temperature</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1a88b9ed3d29a39626f53c5204757603d3" kindref="member">write_list</ref><sp/>(<ref refid="boundary_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref>+</highlight><highlight class="stringliteral">&quot;boundary_condition&quot;</highlight><highlight class="normal">,<sp/>boundary_condition_str);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555" kindref="member">BoundaryCondition</ref><sp/><ref refid="structBoundary_1a9799a69da82898e054c3e00b088f31d9" kindref="member">Boundary :: set_boundary_condition</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555" kindref="member">BoundaryCondition</ref><sp/>cd)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>.resize(<ref refid="structBoundary_1a3b2fcac4809a502f283abb56c7c2adb2" kindref="member">parameters</ref>.nboundary());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>[b]<sp/>=<sp/>cd;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>[b];</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="boundary_8hpp_1af3393571fa8a8daa4ee5c06613b26555" kindref="member">BoundaryCondition</ref><sp/><ref refid="structBoundary_1ac7b1255448bbeb6240a1472b3586b2b6" kindref="member">Boundary :: get_boundary_condition</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>b)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structBoundary_1aa1e62f770ea161895a3630463f1a8497" kindref="member">boundary_condition</ref>[b];</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/geometry/boundary/boundary.cpp"/>
  </compounddef>
</doxygen>
