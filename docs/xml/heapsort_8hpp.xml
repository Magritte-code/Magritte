<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="heapsort_8hpp" kind="file" language="C++">
    <compoundname>heapsort.hpp</compoundname>
    <includes local="no">assert.h</includes>
    <includes refid="types_8hpp" local="yes">tools/types.hpp</includes>
    <includedby refid="lines_8cpp" local="yes">/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp</includedby>
    <includedby refid="model_8cpp" local="yes">/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp</includedby>
    <incdepgraph>
      <node id="1457">
        <label>list</label>
      </node>
      <node id="1454">
        <label>assert.h</label>
      </node>
      <node id="1459">
        <label>Eigen/Core</label>
      </node>
      <node id="1458">
        <label>string</label>
      </node>
      <node id="1456">
        <label>vector</label>
      </node>
      <node id="1460">
        <label>paracabs.hpp</label>
      </node>
      <node id="1455">
        <label>tools/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
      </node>
      <node id="1453">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp</label>
        <link refid="heapsort_8hpp"/>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1463">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/model/model.cpp</label>
        <link refid="model_8cpp"/>
      </node>
      <node id="1462">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lines.cpp</label>
        <link refid="lines_8cpp"/>
      </node>
      <node id="1461">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp</label>
        <link refid="heapsort_8hpp"/>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1463" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="heapsort_8hpp_1a4c66c2f50a65e55c1aa6b2117d309119" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename type</type>
          </param>
        </templateparamlist>
        <type>long</type>
        <definition>long max</definition>
        <argsstring>(const vector&lt; type &gt; &amp;a, const long n, const long i, const long j, const long k)</argsstring>
        <name>max</name>
        <param>
          <type>const vector&lt; type &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp" line="8" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp" bodystart="8" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="heapsort_8hpp_1a662193e41e871274f029757dad98aad1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void downheap</definition>
        <argsstring>(vector&lt; type &gt; &amp;a, Size1 &amp;b, long n, long i)</argsstring>
        <name>downheap</name>
        <param>
          <type>vector&lt; type &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>long</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp" line="20" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp" bodystart="20" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="heapsort_8hpp_1a56317c92d2ef9eb7f4ef2ab353fbb2d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename type</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void heapsort</definition>
        <argsstring>(vector&lt; type &gt; &amp;a, Size1 &amp;b)</argsstring>
        <name>heapsort</name>
        <param>
          <type>vector&lt; type &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp" line="43" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp" bodystart="43" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8hpp" kindref="compound">tools/types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="8" refid="heapsort_8hpp_1a4c66c2f50a65e55c1aa6b2117d309119" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="heapsort_8hpp_1a4c66c2f50a65e55c1aa6b2117d309119" kindref="member">max</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;type&gt;&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>n)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[j]<sp/>&gt;<sp/>a[m])<sp/>{m<sp/>=<sp/>j;}}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>n)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[k]<sp/>&gt;<sp/>a[m])<sp/>{m<sp/>=<sp/>k;}}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="20" refid="heapsort_8hpp_1a662193e41e871274f029757dad98aad1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="heapsort_8hpp_1a662193e41e871274f029757dad98aad1" kindref="member">downheap</ref><sp/>(vector&lt;type&gt;&amp;<sp/>a,<sp/><ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="heapsort_8hpp_1a4c66c2f50a65e55c1aa6b2117d309119" kindref="member">max</ref><sp/>(a,<sp/>n,<sp/>i,<sp/>2*i+1,<sp/>2*i+2);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>i)<sp/>{</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>temp1<sp/>=<sp/>a[i];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>temp2<sp/>=<sp/>b[i];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i]<sp/>=<sp/>a[j];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[j]<sp/>=<sp/>temp1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[i]<sp/>=<sp/>b[j];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[j]<sp/>=<sp/>temp2;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>type&gt;</highlight></codeline>
<codeline lineno="43" refid="heapsort_8hpp_1a56317c92d2ef9eb7f4ef2ab353fbb2d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="heapsort_8hpp_1a56317c92d2ef9eb7f4ef2ab353fbb2d9" kindref="member">heapsort</ref><sp/>(vector&lt;type&gt;&amp;<sp/>a,<sp/><ref refid="types_8hpp_1acfab7a3545428ced0649db555e257353" kindref="member">Size1</ref>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>vector<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>a.size();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>long<sp/>required,<sp/>because<sp/>of<sp/>for<sp/>loop<sp/>below!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assert<sp/>that<sp/>both<sp/>vectors<sp/>have<sp/>the<sp/>same<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(n<sp/>==<sp/>b.size());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(n-2)/2;<sp/>i<sp/>&gt;=0<sp/>;<sp/>i--)<sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>long<sp/>is<sp/>required<sp/>here,<sp/>couting<sp/>down!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="heapsort_8hpp_1a662193e41e871274f029757dad98aad1" kindref="member">downheap</ref><sp/>(a,<sp/>b,<sp/>n,<sp/>i);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>temp1<sp/>=<sp/>a[n-i-1];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>temp2<sp/>=<sp/>b[n-i-1];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[n-i-1]<sp/>=<sp/>a[0];</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[0]<sp/><sp/><sp/><sp/><sp/>=<sp/>temp1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[n-i-1]<sp/>=<sp/>b[0];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[0]<sp/><sp/><sp/><sp/><sp/>=<sp/>temp2;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="heapsort_8hpp_1a662193e41e871274f029757dad98aad1" kindref="member">downheap</ref><sp/>(a,<sp/>b,<sp/>n-i-1,<sp/>0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/tools/heapsort.hpp"/>
  </compounddef>
</doxygen>
