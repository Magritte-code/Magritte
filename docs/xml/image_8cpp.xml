<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="image_8cpp" kind="file" language="C++">
    <compoundname>image.cpp</compoundname>
    <includes refid="image_8hpp" local="yes">image.hpp</includes>
    <includes local="yes">paracabs.hpp</includes>
    <incdepgraph>
      <node id="453">
        <label>list</label>
      </node>
      <node id="462">
        <label>model/geometry/geometry.hpp</label>
        <link refid="geometry_8hpp"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>limits</label>
      </node>
      <node id="469">
        <label>geometry.tpp</label>
        <link refid="geometry_8tpp"/>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>image.hpp</label>
        <link refid="image_8hpp"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
      </node>
      <node id="464">
        <label>cmath</label>
      </node>
      <node id="455">
        <label>Eigen/Core</label>
      </node>
      <node id="454">
        <label>string</label>
      </node>
      <node id="460">
        <label>exception</label>
      </node>
      <node id="448">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/model/image/image.cpp</label>
        <link refid="image_8cpp"/>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>io/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>model/parameters/parameters.hpp</label>
        <link refid="parameters_8hpp"/>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>tools/setOnce.hpp</label>
        <link refid="setOnce_8hpp"/>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="468">
        <label>boundary/boundary.hpp</label>
        <link refid="boundary_8hpp"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>tools/constants.hpp</label>
        <link refid="constants_8hpp"/>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
      <node id="452">
        <label>vector</label>
      </node>
      <node id="466">
        <label>points/points.hpp</label>
        <link refid="points_8hpp"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="456">
        <label>paracabs.hpp</label>
      </node>
      <node id="465">
        <label>../configure.hpp</label>
        <link refid="configure_8hpp"/>
      </node>
      <node id="451">
        <label>tools/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>iostream</label>
      </node>
      <node id="467">
        <label>rays/rays.hpp</label>
        <link refid="rays_8hpp"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="image_8cpp_1af1e7949a3ee58158ef099851093bf734" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <initializer>= &quot;image/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/image/image.cpp" line="5" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/image/image.cpp" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="image_8hpp" kindref="compound">image.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;paracabs.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="image_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;image/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="structImage_1a7460b0ec364ae44f6b4b3b82ed5529d4" kindref="member">Image :: Image</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGeometry" kindref="compound">Geometry</ref>&amp;<sp/>geometry,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>rr)<sp/>:<sp/>ray_nr<sp/>(rr)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.dimension()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((geometry.<ref refid="structGeometry_1ab40f75e6744eff6f8a04459cb5a770fa" kindref="member">rays</ref>.<ref refid="structRays_1aac0ad16c52affd28be5493038d407e69" kindref="member">direction</ref>[ray_nr].x()<sp/>!=<sp/>0.0)<sp/>||</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(geometry.<ref refid="structGeometry_1ab40f75e6744eff6f8a04459cb5a770fa" kindref="member">rays</ref>.<ref refid="structRays_1aac0ad16c52affd28be5493038d407e69" kindref="member">direction</ref>[ray_nr].y()<sp/>!=<sp/>1.0)<sp/>||</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(geometry.<ref refid="structGeometry_1ab40f75e6744eff6f8a04459cb5a770fa" kindref="member">rays</ref>.<ref refid="structRays_1aac0ad16c52affd28be5493038d407e69" kindref="member">direction</ref>[ray_nr].z()<sp/>!=<sp/>0.0)<sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>(</highlight><highlight class="stringliteral">&quot;In<sp/>1D,<sp/>the<sp/>image<sp/>ray<sp/>has<sp/>to<sp/>be<sp/>(0,1,0)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>ImX.resize<sp/>(geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>ImY.resize<sp/>(geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>I.<sp/><sp/>resize<sp/>(geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.npoints(),<sp/>geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.nfreqs());</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>set_coordinates<sp/>(geometry);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="structImage_1a7460b0ec364ae44f6b4b3b82ed5529d4" kindref="member">Image :: Image</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structImage" kindref="compound">Image</ref>&amp;<sp/>image)<sp/>:<sp/>ray_nr<sp/>(image.ray_nr)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>ImX<sp/>=<sp/>image.<ref refid="structImage_1affa6c57e43fdcde6839437377102a6e7" kindref="member">ImX</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>ImY<sp/>=<sp/>image.<ref refid="structImage_1a99fe8443aa2bdd1e73421a1be071968c" kindref="member">ImY</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deep<sp/>copy<sp/>of<sp/>I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>I.nrows<sp/>=<sp/>image.<ref refid="structImage_1aaa752bfbcb0ebae761fd5c40680ce690" kindref="member">I</ref>.nrows;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>I.ncols<sp/>=<sp/>image.<ref refid="structImage_1aaa752bfbcb0ebae761fd5c40680ce690" kindref="member">I</ref>.ncols;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>I.nwarp<sp/>=<sp/>image.<ref refid="structImage_1aaa752bfbcb0ebae761fd5c40680ce690" kindref="member">I</ref>.nwarp;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>I.vec<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>image.<ref refid="structImage_1aaa752bfbcb0ebae761fd5c40680ce690" kindref="member">I</ref>.vec;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>I.allocated<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>I.allocated_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>I.set_dat<sp/>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">//void<sp/>Image<sp/>::<sp/>write<sp/>(const<sp/>Io<sp/>&amp;io)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Writing<sp/>image...&quot;<sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>const<sp/>string<sp/>str_ray_nr<sp/>=<sp/>std::to_string<sp/>(ray_nr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>io.write_list<sp/><sp/>(prefix+&quot;ImX_&quot;+str_ray_nr,<sp/>ImX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>io.write_list<sp/><sp/>(prefix+&quot;ImY_&quot;+str_ray_nr,<sp/>ImY);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Create<sp/>one<sp/>intensity<sp/>variable<sp/>and<sp/>reuse<sp/>for<sp/>I_m<sp/>and<sp/>I_p<sp/>to<sp/>save<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Double2<sp/>intensity_m<sp/>(ncells,<sp/>Double1<sp/>(nfreqs));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Double2<sp/>intensity_p<sp/>(ncells,<sp/>Double1<sp/>(nfreqs));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>OMP_PARALLEL_FOR<sp/>(p,<sp/>ncells)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>nfreqs;<sp/>f++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensity_m[p][f]<sp/>=<sp/>get<sp/>(I_m[p],<sp/>f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intensity_p[p][f]<sp/>=<sp/>get<sp/>(I_p[p],<sp/>f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>io.write_array<sp/>(prefix+&quot;I_m_&quot;+str_ray_nr,<sp/>intensity_m);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>io.write_array<sp/>(prefix+&quot;I_p_&quot;+str_ray_nr,<sp/>intensity_p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structImage_1a643a8393d99a72a7934a7525cedc5b8e" kindref="member">Image :: set_coordinates</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structGeometry" kindref="compound">Geometry</ref>&amp;<sp/>geometry)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.dimension()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threaded_for<sp/>(p,<sp/>geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.npoints(),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structImage_1affa6c57e43fdcde6839437377102a6e7" kindref="member">ImX</ref>[p]<sp/>=<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].x();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structImage_1a99fe8443aa2bdd1e73421a1be071968c" kindref="member">ImY</ref>[p]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.dimension()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rx<sp/>=<sp/>geometry.<ref refid="structGeometry_1ab40f75e6744eff6f8a04459cb5a770fa" kindref="member">rays</ref>.<ref refid="structRays_1aac0ad16c52affd28be5493038d407e69" kindref="member">direction</ref>[<ref refid="structImage_1acc3202bc986c6940b72800459c283d59" kindref="member">ray_nr</ref>].x();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ry<sp/>=<sp/>geometry.<ref refid="structGeometry_1ab40f75e6744eff6f8a04459cb5a770fa" kindref="member">rays</ref>.<ref refid="structRays_1aac0ad16c52affd28be5493038d407e69" kindref="member">direction</ref>[<ref refid="structImage_1acc3202bc986c6940b72800459c283d59" kindref="member">ray_nr</ref>].y();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rz<sp/>=<sp/>geometry.<ref refid="structGeometry_1ab40f75e6744eff6f8a04459cb5a770fa" kindref="member">rays</ref>.<ref refid="structRays_1aac0ad16c52affd28be5493038d407e69" kindref="member">direction</ref>[<ref refid="structImage_1acc3202bc986c6940b72800459c283d59" kindref="member">ray_nr</ref>].z();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/>=<sp/>sqrt<sp/>(rx*rx<sp/>+<sp/>ry*ry);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inverse_denominator<sp/>=<sp/>1.0<sp/>/<sp/>denominator;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/><sp/>ry<sp/>*<sp/>inverse_denominator;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>-rx<sp/>*<sp/>inverse_denominator;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jx<sp/>=<sp/><sp/>rx<sp/>*<sp/>rz<sp/>*<sp/>inverse_denominator;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jy<sp/>=<sp/><sp/>ry<sp/>*<sp/>rz<sp/>*<sp/>inverse_denominator;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jz<sp/>=<sp/>-denominator;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denominator<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threaded_for<sp/>(p,<sp/>geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.npoints(),</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structImage_1affa6c57e43fdcde6839437377102a6e7" kindref="member">ImX</ref>[p]<sp/>=<sp/><sp/><sp/>ix<sp/>*<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].x()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>iy<sp/>*<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].y();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structImage_1a99fe8443aa2bdd1e73421a1be071968c" kindref="member">ImY</ref>[p]<sp/>=<sp/><sp/><sp/>jx<sp/>*<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].x()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>jy<sp/>*<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].y()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>jz<sp/>*<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].z();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;position<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].x()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ImX<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structImage_1affa6c57e43fdcde6839437377102a6e7" kindref="member">ImX</ref>[p]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ix<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ImY<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="structImage_1a99fe8443aa2bdd1e73421a1be071968c" kindref="member">ImY</ref>[p]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>jx<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threaded_for<sp/>(p,<sp/>geometry.<ref refid="structGeometry_1a0e60a58fab88f53d0d918aedf1d68a9b" kindref="member">parameters</ref>.npoints(),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structImage_1affa6c57e43fdcde6839437377102a6e7" kindref="member">ImX</ref>[p]<sp/>=<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].x();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structImage_1a99fe8443aa2bdd1e73421a1be071968c" kindref="member">ImY</ref>[p]<sp/>=<sp/>geometry.<ref refid="structGeometry_1a0c20d35ab5400ec58126d3aea69628cf" kindref="member">points</ref>.<ref refid="structPoints_1a9006948939bc7b57a770c7bec9039848" kindref="member">position</ref>[p].y();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/image/image.cpp"/>
  </compounddef>
</doxygen>
