<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="lineProducingSpecies_8cpp" kind="file" language="C++">
    <compoundname>lineProducingSpecies.cpp</compoundname>
    <includes refid="lineProducingSpecies_8hpp" local="yes">lineProducingSpecies.hpp</includes>
    <incdepgraph>
      <node id="651">
        <label>list</label>
      </node>
      <node id="646">
        <label>Eigen/SparseLU</label>
      </node>
      <node id="656">
        <label>limits</label>
      </node>
      <node id="667">
        <label>lineProducingSpecies.tpp</label>
        <link refid="lineProducingSpecies_8tpp"/>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
      <node id="645">
        <label>lineProducingSpecies.hpp</label>
        <link refid="lineProducingSpecies_8hpp"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
      </node>
      <node id="671">
        <label>cmath</label>
      </node>
      <node id="653">
        <label>Eigen/Core</label>
      </node>
      <node id="652">
        <label>string</label>
      </node>
      <node id="663">
        <label>tools/interpolation.hpp</label>
        <link refid="interpolation_8hpp"/>
        <childnode refid="649" relation="include">
        </childnode>
      </node>
      <node id="658">
        <label>exception</label>
      </node>
      <node id="665">
        <label>lambda/lambda.hpp</label>
        <link refid="lambda_8hpp"/>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
      </node>
      <node id="648">
        <label>io/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="649" relation="include">
        </childnode>
      </node>
      <node id="655">
        <label>model/parameters/parameters.hpp</label>
        <link refid="parameters_8hpp"/>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
      </node>
      <node id="666">
        <label>lambda.tpp</label>
        <link refid="lambda_8tpp"/>
      </node>
      <node id="657">
        <label>tools/setOnce.hpp</label>
        <link refid="setOnce_8hpp"/>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
      <node id="669">
        <label>Eigen/Dense</label>
      </node>
      <node id="670">
        <label>tools/constants.hpp</label>
        <link refid="constants_8hpp"/>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
      </node>
      <node id="650">
        <label>vector</label>
      </node>
      <node id="654">
        <label>paracabs.hpp</label>
      </node>
      <node id="672">
        <label>../configure.hpp</label>
        <link refid="configure_8hpp"/>
      </node>
      <node id="649">
        <label>tools/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
      <node id="660">
        <label>linedata/linedata.hpp</label>
        <link refid="linedata_8hpp"/>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
      </node>
      <node id="664">
        <label>quadrature/quadrature.hpp</label>
        <link refid="quadrature_8hpp"/>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
      </node>
      <node id="668">
        <label>math.h</label>
      </node>
      <node id="647">
        <label>Eigen/SparseCore</label>
      </node>
      <node id="659">
        <label>iostream</label>
      </node>
      <node id="661">
        <label>collisionPartner/collisionPartner.hpp</label>
        <link refid="collisionPartner_8hpp"/>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
      </node>
      <node id="644">
        <label>/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lineProducingSpecies.cpp</label>
        <link refid="lineProducingSpecies_8cpp"/>
        <childnode refid="645" relation="include">
        </childnode>
      </node>
      <node id="662">
        <label>collisionPartner.tpp</label>
        <link refid="collisionPartner_8tpp"/>
        <childnode refid="663" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lineProducingSpecies_8cpp_1af1e7949a3ee58158ef099851093bf734" prot="public" static="no" mutable="no">
        <type>const string</type>
        <definition>const string prefix</definition>
        <argsstring></argsstring>
        <name>prefix</name>
        <initializer>= &quot;lines/lineProducingSpecies_&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lineProducingSpecies.cpp" line="4" column="1" bodyfile="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lineProducingSpecies.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lineProducingSpecies_8hpp" kindref="compound">lineProducingSpecies.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="lineProducingSpecies_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;lines/lineProducingSpecies_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structLineProducingSpecies_1adad73da8cd77b5b2397f6a00eaae703e" kindref="member">LineProducingSpecies :: read</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref>&amp;<sp/>io,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>l)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Reading<sp/>lineProducingSpecies...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref><sp/><sp/>.<ref refid="structLinedata_1a44fb95ba1cc0c37e07fd63137b99544a" kindref="member">read</ref><sp/>(io,<sp/>l);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a5ddef72c65be1892caa3260ff4c671fb" kindref="member">quadrature</ref>.<ref refid="structQuadrature_1ac0512086ea4ee349c1fa9c9d04672c2f" kindref="member">read</ref><sp/>(io,<sp/>l);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a89f6fd9566c31eaefbe3c5c86d8187ff" kindref="member">RT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref><sp/>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a89c5896d4facf040b57c6d092fca7cb9" kindref="member">LambdaStar</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref><sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a2d72fa14880c4f58ec317467f8702462" kindref="member">LambdaTest</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref><sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a8cce2e3e39c64f66ef45e13b07e4df95" kindref="member">lambda</ref>.<ref refid="structLambda_1a0954d8427dea7e6e33f350ca9d062d77" kindref="member">initialize</ref><sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1aea4835c64f6bcf59123b7fb7ff120906" kindref="member">nrad</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a6f905ae1bde6328c60d115ce05491980" kindref="member">Jeff</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1ad4e258d22fbf987ed0ce00c513e27401" kindref="member">Jlin</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a73354cab4a14d5596c1cbb771d3166e6" kindref="member">Jdif</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints();<sp/>p++)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a6f905ae1bde6328c60d115ce05491980" kindref="member">Jeff</ref>[p].resize<sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1aea4835c64f6bcf59123b7fb7ff120906" kindref="member">nrad</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1ad4e258d22fbf987ed0ce00c513e27401" kindref="member">Jlin</ref>[p].resize<sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1aea4835c64f6bcf59123b7fb7ff120906" kindref="member">nrad</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a73354cab4a14d5596c1cbb771d3166e6" kindref="member">Jdif</ref>[p].resize<sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1aea4835c64f6bcf59123b7fb7ff120906" kindref="member">nrad</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1ac75520d36e2f1f197d4119117bf2cd41" kindref="member">nr_line</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints();<sp/>p++)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1ac75520d36e2f1f197d4119117bf2cd41" kindref="member">nr_line</ref>[p].resize<sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1aea4835c64f6bcf59123b7fb7ff120906" kindref="member">nrad</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1aea4835c64f6bcf59123b7fb7ff120906" kindref="member">nrad</ref>;<sp/>k++)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1ac75520d36e2f1f197d4119117bf2cd41" kindref="member">nr_line</ref>[p][k].resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.nquads());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a95966bf75a5f614bb45d04f79176c881" kindref="member">population_prev1</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a2d7d6e6895d14c8cd01f636f180b0987" kindref="member">population_prev2</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a9b5a55557d4fecfdbf767bf383301e33" kindref="member">population_prev3</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a9b5d2c8a2ef70de01db944dbe234533d" kindref="member">population_tot</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1acb7633ca4838a28117f27ef94cf6004a" kindref="member">population</ref>.resize<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints()*<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>prefix_l<sp/>=<sp/><ref refid="lineProducingSpecies_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref><sp/>+<sp/>std::to_string<sp/>(l)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1ad8db00e516c6686e4844c7ad6bfbd28e" kindref="member">read_list</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;population_tot&quot;</highlight><highlight class="normal">,<sp/><ref refid="structLineProducingSpecies_1a9b5d2c8a2ef70de01db944dbe234533d" kindref="member">population_tot</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a28db7c722aac23e2c518e3dfaf1ffa94" kindref="member">read_populations</ref><sp/>(io,<sp/>l,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>pops_prev1<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref><sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>pops_prev2<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref><sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>pops_prev3<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref><sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_prev1<sp/>=<sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;population_prev1&quot;</highlight><highlight class="normal">,<sp/>pops_prev1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_prev2<sp/>=<sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;population_prev2&quot;</highlight><highlight class="normal">,<sp/>pops_prev2);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_prev3<sp/>=<sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;population_prev3&quot;</highlight><highlight class="normal">,<sp/>pops_prev3);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>threaded_for<sp/>(p,<sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_prev1<sp/>==<sp/>0)<sp/>{<ref refid="structLineProducingSpecies_1a95966bf75a5f614bb45d04f79176c881" kindref="member">population_prev1</ref><sp/>(<ref refid="structLineProducingSpecies_1a21a5da93b750899bd6b01519301ab55d" kindref="member">index</ref><sp/>(p,<sp/>i))<sp/>=<sp/>pops_prev1[p][i];}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_prev2<sp/>==<sp/>0)<sp/>{<ref refid="structLineProducingSpecies_1a2d7d6e6895d14c8cd01f636f180b0987" kindref="member">population_prev2</ref><sp/>(<ref refid="structLineProducingSpecies_1a21a5da93b750899bd6b01519301ab55d" kindref="member">index</ref><sp/>(p,<sp/>i))<sp/>=<sp/>pops_prev2[p][i];}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_prev3<sp/>==<sp/>0)<sp/>{<ref refid="structLineProducingSpecies_1a9b5a55557d4fecfdbf767bf383301e33" kindref="member">population_prev3</ref><sp/>(<ref refid="structLineProducingSpecies_1a21a5da93b750899bd6b01519301ab55d" kindref="member">index</ref><sp/>(p,<sp/>i))<sp/>=<sp/>pops_prev3[p][i];}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structLineProducingSpecies_1abfbd3f9d78728491ab3355f96b8c9885" kindref="member">LineProducingSpecies :: write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref>&amp;<sp/>io,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>l)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Writing<sp/>lineProducingSpecies...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref><sp/><sp/>.<ref refid="structLinedata_1a67e599db1e49429d97f85ea0c462e62a" kindref="member">write</ref><sp/>(io,<sp/>l);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a5ddef72c65be1892caa3260ff4c671fb" kindref="member">quadrature</ref>.<ref refid="structQuadrature_1a74190bd7de5057c155e55fb64ea60f5e" kindref="member">write</ref><sp/>(io,<sp/>l);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1a7df1d9f027672baf18a525a2d92fb73f" kindref="member">write_populations</ref><sp/>(io,<sp/>l,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>string<sp/>prefix_l<sp/>=<sp/>prefix<sp/>+<sp/>std::to_string<sp/>(l)<sp/>+<sp/>&quot;/&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>io.write_list<sp/>(prefix_l<sp/>+<sp/>&quot;population_tot&quot;,<sp/>population_tot);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Double2<sp/>pops_prev1<sp/>(parameters.npoints(),<sp/>Double1<sp/>(linedata.nlev));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Double2<sp/>pops_prev2<sp/>(parameters.npoints(),<sp/>Double1<sp/>(linedata.nlev));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Double2<sp/>pops_prev3<sp/>(parameters.npoints(),<sp/>Double1<sp/>(linedata.nlev));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>threaded_for<sp/>(p,<sp/>parameters.npoints(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for<sp/>(Size<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>linedata.nlev;<sp/>i++)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops_prev1[p][i]<sp/>=<sp/>population_prev1<sp/>(index<sp/>(p,<sp/>i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops_prev2[p][i]<sp/>=<sp/>population_prev2<sp/>(index<sp/>(p,<sp/>i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops_prev3[p][i]<sp/>=<sp/>population_prev3<sp/>(index<sp/>(p,<sp/>i));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>io.write_array<sp/>(prefix_l+&quot;population_prev1&quot;,<sp/>pops_prev1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>io.write_array<sp/>(prefix_l+&quot;population_prev2&quot;,<sp/>pops_prev2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>io.write_array<sp/>(prefix_l+&quot;population_prev3&quot;,<sp/>pops_prev3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structLineProducingSpecies_1a28db7c722aac23e2c518e3dfaf1ffa94" kindref="member">LineProducingSpecies :: read_populations</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref><sp/>&amp;io,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tag)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>prefix_l<sp/>=<sp/><ref refid="lineProducingSpecies_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref><sp/>+<sp/>std::to_string<sp/>(l)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>pops<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref><sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;population&quot;</highlight><highlight class="normal">+tag,<sp/>pops);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threaded_for<sp/>(p,<sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structLineProducingSpecies_1acb7633ca4838a28117f27ef94cf6004a" kindref="member">population</ref><sp/>(<ref refid="structLineProducingSpecies_1a21a5da93b750899bd6b01519301ab55d" kindref="member">index</ref><sp/>(p,<sp/>i))<sp/>=<sp/>pops[p][i];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;J_lin&quot;</highlight><highlight class="normal">+tag,<sp/><ref refid="structLineProducingSpecies_1ad4e258d22fbf987ed0ce00c513e27401" kindref="member">Jlin</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1af6cacc007e010a226459b37ba976aa18" kindref="member">read_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;J_eff&quot;</highlight><highlight class="normal">+tag,<sp/><ref refid="structLineProducingSpecies_1a6f905ae1bde6328c60d115ce05491980" kindref="member">Jeff</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structLineProducingSpecies_1a7df1d9f027672baf18a525a2d92fb73f" kindref="member">LineProducingSpecies :: write_populations</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structIo" kindref="compound">Io</ref>&amp;<sp/>io,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>l,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tag)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>prefix_l<sp/>=<sp/><ref refid="lineProducingSpecies_8cpp_1af1e7949a3ee58158ef099851093bf734" kindref="member">prefix</ref><sp/>+<sp/>std::to_string<sp/>(l)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Writing<sp/>populations...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structLineProducingSpecies_1acb7633ca4838a28117f27ef94cf6004a" kindref="member">population</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="types_8hpp_1ae4c3ee17bf4177a16f81df0795dee016" kindref="member">Double2</ref><sp/>pops<sp/>(<ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),<sp/><ref refid="types_8hpp_1a90a65680382394cec1507779e4cdbce5" kindref="member">Double1</ref><sp/>(<ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threaded_for<sp/>(p,<sp/><ref refid="structLineProducingSpecies_1a389bbf3d7c290f7229d0e2ef78647b37" kindref="member">parameters</ref>.npoints(),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="types_8hpp_1abff30891abb1012c410045707ef09790" kindref="member">Size</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="structLineProducingSpecies_1af82c9246277856fe9a85fee5efc020a9" kindref="member">linedata</ref>.<ref refid="structLinedata_1a9f9ec2a23568365096a7dec72dd9298e" kindref="member">nlev</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pops[p][i]<sp/>=<sp/><ref refid="structLineProducingSpecies_1acb7633ca4838a28117f27ef94cf6004a" kindref="member">population</ref><sp/>(<ref refid="structLineProducingSpecies_1a21a5da93b750899bd6b01519301ab55d" kindref="member">index</ref><sp/>(p,<sp/>i));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1aa73fe79d27fbaf31cbea124769e13a2e" kindref="member">write_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;population&quot;</highlight><highlight class="normal">+tag,<sp/>pops);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structLineProducingSpecies_1ad4e258d22fbf987ed0ce00c513e27401" kindref="member">Jlin</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1aa73fe79d27fbaf31cbea124769e13a2e" kindref="member">write_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;J_lin&quot;</highlight><highlight class="normal">+tag,<sp/><ref refid="structLineProducingSpecies_1ad4e258d22fbf987ed0ce00c513e27401" kindref="member">Jlin</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structLineProducingSpecies_1a6f905ae1bde6328c60d115ce05491980" kindref="member">Jeff</ref>.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>io.<ref refid="structIo_1aa73fe79d27fbaf31cbea124769e13a2e" kindref="member">write_array</ref><sp/>(prefix_l+</highlight><highlight class="stringliteral">&quot;J_eff&quot;</highlight><highlight class="normal">+tag,<sp/><ref refid="structLineProducingSpecies_1a6f905ae1bde6328c60d115ce05491980" kindref="member">Jeff</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/frederik/Dropbox/GitHub/Magritte/src/model/lines/lineProducingSpecies/lineProducingSpecies.cpp"/>
  </compounddef>
</doxygen>
